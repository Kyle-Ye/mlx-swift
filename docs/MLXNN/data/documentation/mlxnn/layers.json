{
  "abstract" : [
    {
      "text" : "Built-in layers.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/layers"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "MLXNN"
      }
    ],
    "role" : "collectionGroup",
    "title" : "Layers"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "code" : "MLXNN",
              "type" : "codeVoice"
            },
            {
              "text" : " provides a number of built-in layers that can be used to build models.",
              "type" : "text"
            },
            {
              "text" : "\n",
              "type" : "text"
            },
            {
              "text" : "See also ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/activations",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " for Activation Layers and ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/custom-layers",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " for examples of their use",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "abstract" : [
        {
          "text" : "Layers that provide an interface that takes a single MLXArray and produces a single MLXArray.",
          "type" : "text"
        },
        {
          "text" : " ",
          "type" : "text"
        },
        {
          "text" : "These can be used with ",
          "type" : "text"
        },
        {
          "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Sequential",
          "isActive" : true,
          "type" : "reference"
        },
        {
          "text" : ".",
          "type" : "text"
        }
      ],
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Conv1d",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Conv2d",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Dropout",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Dropout2d",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Dropout3d",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Embedding",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Identity",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Linear",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/QuantizedLinear",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/RMSNorm",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Sequential"
      ],
      "title" : "Unary Layers"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Bilinear",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/MultiHeadAttention"
      ],
      "title" : "Other Layers"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/mlxnn\/layers"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://mlx.swift.mlxnn/documentation/MLXNN": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "MLXNN",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Bilinear": {
  "abstract" : [
    {
      "text" : "Applies a bilinear transformation to the inputs.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Bilinear"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Bilinear",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Bilinear"
    }
  ],
  "role" : "symbol",
  "title" : "Bilinear",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/bilinear"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Conv1d": {
  "abstract" : [
    {
      "text" : "Applies a 1-dimensional convolution over the multi-channel input sequence.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Conv1d"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Conv1d",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Conv1d"
    }
  ],
  "role" : "symbol",
  "title" : "Conv1d",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/conv1d"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Conv2d": {
  "abstract" : [
    {
      "text" : "Applies a 2-dimensional convolution over the multi-channel input image.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Conv2d"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Conv2d",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Conv2d"
    }
  ],
  "role" : "symbol",
  "title" : "Conv2d",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/conv2d"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Dropout": {
  "abstract" : [
    {
      "text" : "Randomly zero a portion of the elements during training.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Dropout"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Dropout",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Dropout"
    }
  ],
  "role" : "symbol",
  "title" : "Dropout",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/dropout"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Dropout2d": {
  "abstract" : [
    {
      "text" : "Apply 2D channel-wise dropout during training.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Dropout2d"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Dropout2d",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Dropout2d"
    }
  ],
  "role" : "symbol",
  "title" : "Dropout2d",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/dropout2d"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Dropout3d": {
  "abstract" : [
    {
      "text" : "Apply 3D channel-wise dropout during training.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Dropout3d"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Dropout3d",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Dropout3d"
    }
  ],
  "role" : "symbol",
  "title" : "Dropout3d",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/dropout3d"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Embedding": {
  "abstract" : [
    {
      "text" : "Implements a simple lookup table that maps each input integer to a high-dimensional vector.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Embedding"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Embedding",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Embedding"
    }
  ],
  "role" : "symbol",
  "title" : "Embedding",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/embedding"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Identity": {
  "abstract" : [
    {
      "text" : "A placeholder identity operator that is argument-insensitive.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Identity"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Identity",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Identity"
    }
  ],
  "role" : "symbol",
  "title" : "Identity",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/identity"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Linear": {
  "abstract" : [
    {
      "text" : "Applies an affine transformation to the input.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Linear"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Linear",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Linear"
    }
  ],
  "role" : "symbol",
  "title" : "Linear",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/linear"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/MultiHeadAttention": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MultiHeadAttention"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/MultiHeadAttention",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MultiHeadAttention"
    }
  ],
  "role" : "symbol",
  "title" : "MultiHeadAttention",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/multiheadattention"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/QuantizedLinear": {
  "abstract" : [
    {
      "text" : "Applies an affine transformation to the input using a quantized weight matrix.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "QuantizedLinear"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/QuantizedLinear",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "QuantizedLinear"
    }
  ],
  "role" : "symbol",
  "title" : "QuantizedLinear",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/quantizedlinear"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/RMSNorm": {
  "abstract" : [
    {
      "text" : "Applies Root Mean Square normalization [1] to the inputs.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RMSNorm"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/RMSNorm",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RMSNorm"
    }
  ],
  "role" : "symbol",
  "title" : "RMSNorm",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/rmsnorm"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Sequential": {
  "abstract" : [
    {
      "text" : "A layer that calls the passed ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/UnaryLayer",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " in order.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Sequential"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Sequential",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Sequential"
    }
  ],
  "role" : "symbol",
  "title" : "Sequential",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/sequential"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/UnaryLayer": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "Layer",
      "type" : "codeVoice"
    },
    {
      "text" : " (",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " subclass) that can be evaluated as a ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "unary function",
          "type" : "text"
        }
      ],
      "type" : "emphasis"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UnaryLayer"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/UnaryLayer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UnaryLayer"
    }
  ],
  "role" : "symbol",
  "title" : "UnaryLayer",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/unarylayer"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/activations": {
  "abstract" : [
    {
      "text" : "Built-in activation functions and layers.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/activations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Activation Functions and Layers",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/activations"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/custom-layers": {
  "abstract" : [
    {
      "text" : "Creating custom modules using ",
      "type" : "text"
    },
    {
      "code" : "MLXNN",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/custom-layers",
  "kind" : "article",
  "role" : "article",
  "title" : "Creating Modules",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/custom-layers"
}
}
}