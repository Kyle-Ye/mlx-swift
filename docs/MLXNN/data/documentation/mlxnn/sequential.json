{
  "abstract" : [
    {
      "text" : "A layer that calls the passed ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/UnaryLayer",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " in order.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Sequential"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:5MLXNN10SequentialC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Sequential"
      }
    ],
    "modules" : [
      {
        "name" : "MLXNN"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "Sequential"
      }
    ],
    "remoteSource" : {
      "fileName" : "Containers.swift",
      "url" : "https:\/\/github.com\/ml-explore\/mlx-swift\/blob\/main\/Source\/MLXNN\/Containers.swift#L40"
    },
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "Sequential"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "Sequential"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "code" : "Sequential",
              "type" : "codeVoice"
            },
            {
              "text" : " can be constructed either with an array of layers or using a ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/SequentialBuilder",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ":",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "\/\/ a nonsensical Sequential layer, but it demonstrates how",
            "\/\/ to constructuct something with an interesting structure",
            "let b = Bool.random()",
            "let s = Sequential {",
            "    Tanh()",
            "    if b {",
            "        Tanh()",
            "    } else {",
            "        Sigmoid()",
            "    }",
            "    for _ in 0 ..< 3 {",
            "        Linear(10, 20)",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "produces:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "Sequential {",
            "  layers: [",
            "    Tanh,",
            "    Sigmoid,",
            "    Linear(inputDimensions=10, outputDimensions=20, bias=true),",
            "    Linear(inputDimensions=10, outputDimensions=20, bias=true),",
            "    Linear(inputDimensions=10, outputDimensions=20, bias=true)",
            "  ],",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module"
      ],
      "kind" : "relationships",
      "title" : "Inherits From",
      "type" : "inheritsFrom"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/3MLX19IndentedDescriptionP",
        "doc:\/\/mlx.swift.mlxnn\/s23CustomStringConvertibleP",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/UnaryLayer"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Conv1d",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Conv2d",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Dropout",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Dropout2d",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Dropout3d",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Embedding",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Identity",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Linear",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/QuantizedLinear",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/RoPE",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/RMSNorm"
      ],
      "title" : "Unary Layers"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Sequential\/init(layers:)-2rde0",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Sequential\/init(layers:)-3zdqn",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Sequential\/init(layers:)-43yu"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Sequential\/callAsFunction(_:)"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/mlxnn\/sequential"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://mlx.swift.mlxnn/3MLX19IndentedDescriptionP": {
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/3MLX19IndentedDescriptionP",
  "title" : "MLX.IndentedDescription",
  "type" : "unresolvable"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "MLXNN",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Conv1d": {
  "abstract" : [
    {
      "text" : "Applies a 1-dimensional convolution over the multi-channel input sequence.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Conv1d"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Conv1d",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Conv1d"
    }
  ],
  "role" : "symbol",
  "title" : "Conv1d",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/conv1d"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Conv2d": {
  "abstract" : [
    {
      "text" : "Applies a 2-dimensional convolution over the multi-channel input image.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Conv2d"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Conv2d",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Conv2d"
    }
  ],
  "role" : "symbol",
  "title" : "Conv2d",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/conv2d"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Dropout": {
  "abstract" : [
    {
      "text" : "Randomly zero a portion of the elements during training.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Dropout"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Dropout",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Dropout"
    }
  ],
  "role" : "symbol",
  "title" : "Dropout",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/dropout"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Dropout2d": {
  "abstract" : [
    {
      "text" : "Apply 2D channel-wise dropout during training.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Dropout2d"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Dropout2d",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Dropout2d"
    }
  ],
  "role" : "symbol",
  "title" : "Dropout2d",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/dropout2d"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Dropout3d": {
  "abstract" : [
    {
      "text" : "Apply 3D channel-wise dropout during training.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Dropout3d"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Dropout3d",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Dropout3d"
    }
  ],
  "role" : "symbol",
  "title" : "Dropout3d",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/dropout3d"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Embedding": {
  "abstract" : [
    {
      "text" : "Implements a simple lookup table that maps each input integer to a high-dimensional vector.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Embedding"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Embedding",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Embedding"
    }
  ],
  "role" : "symbol",
  "title" : "Embedding",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/embedding"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Identity": {
  "abstract" : [
    {
      "text" : "A placeholder identity operator that is argument-insensitive.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Identity"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Identity",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Identity"
    }
  ],
  "role" : "symbol",
  "title" : "Identity",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/identity"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Linear": {
  "abstract" : [
    {
      "text" : "Applies an affine transformation to the input.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Linear"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Linear",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Linear"
    }
  ],
  "role" : "symbol",
  "title" : "Linear",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/linear"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module": {
  "abstract" : [
    {
      "text" : "Base class for building neural networks with MLX.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Module"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Module"
    }
  ],
  "role" : "symbol",
  "title" : "Module",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/QuantizedLinear": {
  "abstract" : [
    {
      "text" : "Applies an affine transformation to the input using a quantized weight matrix.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "QuantizedLinear"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/QuantizedLinear",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "QuantizedLinear"
    }
  ],
  "role" : "symbol",
  "title" : "QuantizedLinear",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/quantizedlinear"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/RMSNorm": {
  "abstract" : [
    {
      "text" : "Applies Root Mean Square normalization [1] to the inputs.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RMSNorm"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/RMSNorm",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RMSNorm"
    }
  ],
  "role" : "symbol",
  "title" : "RMSNorm",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/rmsnorm"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/RoPE": {
  "abstract" : [
    {
      "text" : "Implements the rotary positional encoding.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RoPE"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/RoPE",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RoPE"
    }
  ],
  "role" : "symbol",
  "title" : "RoPE",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/rope"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Sequential": {
  "abstract" : [
    {
      "text" : "A layer that calls the passed ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/UnaryLayer",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " in order.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Sequential"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Sequential",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Sequential"
    }
  ],
  "role" : "symbol",
  "title" : "Sequential",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/sequential"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Sequential/callAsFunction(_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "callAsFunction"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Sequential\/callAsFunction(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "callAsFunction(_:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/sequential\/callasfunction(_:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Sequential/init(layers:)-2rde0": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "layers"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10UnaryLayerP",
      "text" : "UnaryLayer"
    },
    {
      "kind" : "text",
      "text" : "...)"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Sequential\/init(layers:)-2rde0",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(layers:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/sequential\/init(layers:)-2rde0"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Sequential/init(layers:)-3zdqn": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "layers"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10UnaryLayerP",
      "text" : "UnaryLayer"
    },
    {
      "kind" : "text",
      "text" : "])"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Sequential\/init(layers:)-3zdqn",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(layers:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/sequential\/init(layers:)-3zdqn"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Sequential/init(layers:)-43yu": {
  "abstract" : [
    {
      "text" : "A convenient way to write code that builds a Sequential layer:",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "layers"
    },
    {
      "kind" : "text",
      "text" : ": () -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10UnaryLayerP",
      "text" : "UnaryLayer"
    },
    {
      "kind" : "text",
      "text" : "])"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Sequential\/init(layers:)-43yu",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(layers:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/sequential\/init(layers:)-43yu"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/SequentialBuilder": {
  "abstract" : [
    {
      "text" : "A way to build ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Sequential",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SequentialBuilder"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/SequentialBuilder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SequentialBuilder"
    }
  ],
  "role" : "symbol",
  "title" : "SequentialBuilder",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/sequentialbuilder"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/UnaryLayer": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "Layer",
      "type" : "codeVoice"
    },
    {
      "text" : " (",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " subclass) that can be evaluated as a ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "unary function",
          "type" : "text"
        }
      ],
      "type" : "emphasis"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UnaryLayer"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/UnaryLayer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UnaryLayer"
    }
  ],
  "role" : "symbol",
  "title" : "UnaryLayer",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/unarylayer"
},
"doc://mlx.swift.mlxnn/s23CustomStringConvertibleP": {
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/s23CustomStringConvertibleP",
  "title" : "Swift.CustomStringConvertible",
  "type" : "unresolvable"
}
}
}