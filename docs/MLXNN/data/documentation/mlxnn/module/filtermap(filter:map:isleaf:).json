{
  "abstract" : [
    {
      "text" : "Recursively filter and map the contents of the module and its children and produce a ",
      "type" : "text"
    },
    {
      "code" : "NestedDictionary",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "with the results.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterMap(filter:map:isLeaf:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:5MLXNN6ModuleC9filterMap0C03map6isLeaf3MLX16NestedDictionaryVySSxGSbAC_SSAH0I4ItemOySSAA0B5ValueOGtXE_xSgAPXESbAC_SSAPtXEtlF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "filterMap"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "Result"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "externalParam",
        "text" : "filter"
      },
      {
        "kind" : "text",
        "text" : ": ("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:5MLXNN6ModuleC",
        "text" : "Module"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:5MLXNN10ModuleItema",
        "text" : "ModuleItem"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "map"
      },
      {
        "kind" : "text",
        "text" : ": ("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:5MLXNN10ModuleItema",
        "text" : "ModuleItem"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Result"
      },
      {
        "kind" : "text",
        "text" : "?, "
      },
      {
        "kind" : "externalParam",
        "text" : "isLeaf"
      },
      {
        "kind" : "text",
        "text" : ": ("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:5MLXNN6ModuleC",
        "text" : "Module"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:5MLXNN10ModuleItema",
        "text" : "ModuleItem"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:3MLX16NestedDictionaryV",
        "text" : "NestedDictionary"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Result"
      },
      {
        "kind" : "text",
        "text" : ">"
      }
    ],
    "modules" : [
      {
        "name" : "MLXNN"
      }
    ],
    "remoteSource" : {
      "fileName" : "Module.swift",
      "url" : "https:\/\/github.com\/ml-explore\/mlx-swift\/blob\/main\/Source\/MLXNN\/Module.swift#L177"
    },
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "filterMap(filter:map:isLeaf:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "filterMap"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Result"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "externalParam",
              "text" : "filter"
            },
            {
              "kind" : "text",
              "text" : ": ("
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:5MLXNN6ModuleC",
              "text" : "Module"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:SS",
              "text" : "String"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleItem",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:5MLXNN10ModuleItema",
              "text" : "ModuleItem"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sb",
              "text" : "Bool"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "map"
            },
            {
              "kind" : "text",
              "text" : ": ("
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleItem",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:5MLXNN10ModuleItema",
              "text" : "ModuleItem"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Result"
            },
            {
              "kind" : "text",
              "text" : "? = { $0 }, "
            },
            {
              "kind" : "externalParam",
              "text" : "isLeaf"
            },
            {
              "kind" : "text",
              "text" : ": ("
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:5MLXNN6ModuleC",
              "text" : "Module"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:SS",
              "text" : "String"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleItem",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:5MLXNN10ModuleItema",
              "text" : "ModuleItem"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sb",
              "text" : "Bool"
            },
            {
              "kind" : "text",
              "text" : " = Module.isLeafDefault) -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:3MLX16NestedDictionaryV",
              "text" : "NestedDictionary"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:SS",
              "text" : "String"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Result"
            },
            {
              "kind" : "text",
              "text" : ">"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "filter function that determines if the (Module, Key, Item) tuple should be examined",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "filter"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Transformation of the values.  By default this is identity but the caller can transform to other types, etc.  See ",
                  "type" : "text"
                },
                {
                  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/mapParameters(map:)",
                  "isActive" : true,
                  "type" : "reference"
                },
                {
                  "text" : " and others for helper functions that can assist with common types.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "map"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "closure that determines if a value is a leaf or not.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "isLeaf"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "",
              "type" : "text"
            },
            {
              "code" : "NestedDictionary",
              "type" : "codeVoice"
            },
            {
              "text" : " matching the structure with mapped values.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Traverses the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleItems",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " produced by ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/items()",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " and filters and maps their contents.  For each item",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "in the ",
              "type" : "text"
            },
            {
              "code" : "ModuleItems",
              "type" : "codeVoice"
            },
            {
              "text" : " this will call the ",
              "type" : "text"
            },
            {
              "code" : "filter",
              "type" : "codeVoice"
            },
            {
              "text" : " to determine if it should be included.  There are a number of",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "predefined filters available, see ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/module-filters",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".  ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterAll",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " will accept all values while",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterValidParameters",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " will only examine structure and parameters.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The ",
              "type" : "text"
            },
            {
              "code" : "map",
              "type" : "codeVoice"
            },
            {
              "text" : " function transforms the visited values.  By default it is identity and will just return the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleItem",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "directly.  There are a number of helper functions like ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/mapParameters(map:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/mapModule(map:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "that can help deal with types like ",
              "type" : "text"
            },
            {
              "code" : "MLXArray",
              "type" : "codeVoice"
            },
            {
              "text" : " or ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".  For example:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "\/\/ produces NestedDictionary<String, [Int]> for the parameters attached",
            "\/\/ directly to this module",
            "let localParameterShapes = module.filterMap(",
            "    filter: Module.filterLocalParameters,",
            "    map: Module.mapParameters { $0.shape })"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The ",
              "type" : "text"
            },
            {
              "code" : "isLeaf",
              "type" : "codeVoice"
            },
            {
              "text" : " function is called to determine if the value should be transformed via the ",
              "type" : "text"
            },
            {
              "code" : "map",
              "type" : "codeVoice"
            },
            {
              "text" : " or",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "if the structure should be traversed.  For example this will collect the leaf modules:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "\/\/ produces NestedDictionary<String, MLXArray> for all leaf modules",
            "let leafParameters = module.filterMap(",
            "    filter: Module.filterValidParameters,",
            "    map: Module.mapParameters { $0 },",
            "    isLeaf: Module.isLeafModuleNoChildren)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "See-Also",
          "level" : 3,
          "text" : "See Also",
          "type" : "heading"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/module-filters",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/parameters()",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/mapParameters(map:isLeaf:)",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/modules()",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/items()",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/apply(filter:map:)",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/mapParameters(map:isLeaf:)",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/parameters()",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/trainableParameters()",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/update(parameters:)",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/update(parameters:verify:)"
      ],
      "title" : "Parameters"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/mlxnn\/module\/filtermap(filter:map:isleaf:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://mlx.swift.mlxnn/documentation/MLXNN": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "MLXNN",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module": {
  "abstract" : [
    {
      "text" : "Base class for building neural networks with MLX.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Module"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Module"
    }
  ],
  "role" : "symbol",
  "title" : "Module",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/apply(filter:map:)": {
  "abstract" : [
    {
      "text" : "Apply a closure to the parameters in a ",
      "type" : "text"
    },
    {
      "code" : "Module",
      "type" : "codeVoice"
    },
    {
      "text" : " recursively.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "apply"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "filter"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "map"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/apply(filter:map:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "apply(filter:map:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/apply(filter:map:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/filterAll": {
  "abstract" : [
    {
      "text" : "Filter that will accept all values.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "filterAll"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterAll",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "filterAll",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/filterall"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/filterMap(filter:map:isLeaf:)": {
  "abstract" : [
    {
      "text" : "Recursively filter and map the contents of the module and its children and produce a ",
      "type" : "text"
    },
    {
      "code" : "NestedDictionary",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "with the results.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "filterMap"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "filter"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "map"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "isLeaf"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX16NestedDictionaryV",
      "text" : "NestedDictionary"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterMap(filter:map:isLeaf:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "filterMap(filter:map:isLeaf:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/filtermap(filter:map:isleaf:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/filterValidParameters": {
  "abstract" : [
    {
      "text" : "Filter that will accept all structure (",
      "type" : "text"
    },
    {
      "code" : ".array",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : ".dictionary",
      "type" : "codeVoice"
    },
    {
      "text" : ") and ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue\/parameters(_:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "or ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue\/module(_:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " allowing recursion into sub-Modules (layers).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "filterValidParameters"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterValidParameters",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "filterValidParameters",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/filtervalidparameters"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/items()": {
  "abstract" : [
    {
      "text" : "Return a ",
      "type" : "text"
    },
    {
      "code" : "NestedDictionary",
      "type" : "codeVoice"
    },
    {
      "text" : " structure of ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleItem",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " representing the ivars of the ",
      "type" : "text"
    },
    {
      "code" : "Module",
      "type" : "codeVoice"
    },
    {
      "text" : " instance.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "items"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN11ModuleItemsa",
      "text" : "ModuleItems"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/items()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "items()",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/items()"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/mapModule(map:)": {
  "abstract" : [
    {
      "text" : "Function that will turn a ",
      "type" : "text"
    },
    {
      "code" : "(Module) -> Result?",
      "type" : "codeVoice"
    },
    {
      "text" : " into a function suitable for use in ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterMap(filter:map:isLeaf:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "mapModule"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "map"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "?) -> ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/mapModule(map:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "mapModule(map:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/mapmodule(map:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/mapParameters(map:)": {
  "abstract" : [
    {
      "text" : "Function that will turn a ",
      "type" : "text"
    },
    {
      "code" : "(MLXArray) -> Result?",
      "type" : "codeVoice"
    },
    {
      "text" : " into a function suitable for use in ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterMap(filter:map:isLeaf:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "mapParameters"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "map"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "?) -> ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/mapParameters(map:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "mapParameters(map:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/mapparameters(map:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/mapParameters(map:isLeaf:)": {
  "abstract" : [
    {
      "text" : "Apply a ",
      "type" : "text"
    },
    {
      "code" : "map",
      "type" : "codeVoice"
    },
    {
      "text" : " to all parameters (",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue\/parameters(_:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ") in the module and its children.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "mapParameters"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "map"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "isLeaf"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX16NestedDictionaryV",
      "text" : "NestedDictionary"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/mapParameters(map:isLeaf:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "mapParameters(map:isLeaf:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/mapparameters(map:isleaf:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/modules()": {
  "abstract" : [
    {
      "text" : "Return a flat array of all the ",
      "type" : "text"
    },
    {
      "code" : "Module",
      "type" : "codeVoice"
    },
    {
      "text" : " in the instance (including self).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "modules"
    },
    {
      "kind" : "text",
      "text" : "() -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/modules()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "modules()",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/modules()"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/parameters()": {
  "abstract" : [
    {
      "text" : "Return a ",
      "type" : "text"
    },
    {
      "code" : "NestedDictionary<String, MLXArray>",
      "type" : "codeVoice"
    },
    {
      "text" : " for all parameters in the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "model (all layers).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "parameters"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN16ModuleParametersa",
      "text" : "ModuleParameters"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/parameters()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "parameters()",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/parameters()"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/trainableParameters()": {
  "abstract" : [
    {
      "text" : "Return a ",
      "type" : "text"
    },
    {
      "code" : "NestedDictionary<String, MLXArray>",
      "type" : "codeVoice"
    },
    {
      "text" : " for all trainable parameters in the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "model (all layers).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "trainableParameters"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN16ModuleParametersa",
      "text" : "ModuleParameters"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/trainableParameters()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "trainableParameters()",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/trainableparameters()"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/update(parameters:)": {
  "abstract" : [
    {
      "text" : "A non-throwing version of ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/update(parameters:verify:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "update"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "parameters"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN16ModuleParametersa",
      "text" : "ModuleParameters"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/update(parameters:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "update(parameters:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/update(parameters:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/update(parameters:verify:)": {
  "abstract" : [
    {
      "text" : "Replace the parameters of this ",
      "type" : "text"
    },
    {
      "code" : "Module",
      "type" : "codeVoice"
    },
    {
      "text" : " with the provided parameters.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "update"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "parameters"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN16ModuleParametersa",
      "text" : "ModuleParameters"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "verify"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC12VerifyUpdateV",
      "text" : "VerifyUpdate"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/update(parameters:verify:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "update(parameters:verify:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/update(parameters:verify:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/ModuleItem": {
  "abstract" : [
    {
      "text" : "Single item from ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/items()",
      "isActive" : true,
      "type" : "reference"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ModuleItem"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleItem",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ModuleItem"
    }
  ],
  "role" : "symbol",
  "title" : "ModuleItem",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/moduleitem"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/ModuleItems": {
  "abstract" : [
    {
      "code" : "NestedDictionary",
      "type" : "codeVoice"
    },
    {
      "text" : " structure of ",
      "type" : "text"
    },
    {
      "code" : "ModuleValue",
      "type" : "codeVoice"
    },
    {
      "text" : " from ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/items()",
      "isActive" : true,
      "type" : "reference"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ModuleItems"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleItems",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ModuleItems"
    }
  ],
  "role" : "symbol",
  "title" : "ModuleItems",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/moduleitems"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/ModuleValue/module(_:)": {
  "abstract" : [
    {
      "text" : "A module value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "module"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue\/module(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ModuleValue.module(_:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/modulevalue\/module(_:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/ModuleValue/parameters(_:)": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "MLXArray",
      "type" : "codeVoice"
    },
    {
      "text" : " parameters value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "parameters"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue\/parameters(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ModuleValue.parameters(_:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/modulevalue\/parameters(_:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/module-filters": {
  "abstract" : [
    {
      "text" : "Pre-built filter and map functions in ",
      "type" : "text"
    },
    {
      "code" : "Module",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/module-filters",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "`Module` Filter and Map Functions",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module-filters"
}
}
}