{
  "abstract" : [
    {
      "text" : "Applies a bilinear transformation to the inputs.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Bilinear"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:5MLXNN8BilinearC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Bilinear"
      }
    ],
    "modules" : [
      {
        "name" : "MLXNN"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "Bilinear"
      }
    ],
    "remoteSource" : {
      "fileName" : "Linear.swift",
      "url" : "https:\/\/github.com\/ml-explore\/mlx-swift\/blob\/main\/Source\/MLXNN\/Linear.swift#L142"
    },
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "Bilinear"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "Bilinear"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Concretely:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "y = x1.matmul(w.T)",
            "y = x2.matmul(y)",
            "y = y + b"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "where ",
              "type" : "text"
            },
            {
              "code" : "w",
              "type" : "codeVoice"
            },
            {
              "text" : " has shape ",
              "type" : "text"
            },
            {
              "code" : "[outputDimensions, inputDimensions2, inputDimensions1]",
              "type" : "codeVoice"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "code" : "b",
              "type" : "codeVoice"
            },
            {
              "text" : " has",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "shape ",
              "type" : "text"
            },
            {
              "code" : "[outputDimensions]",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The values are initialized from the uniform distribution:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "scale = sqrt(1.0 \/ inputDimensions)",
            "W = MLXRandom.uniform(-scale ..< scale, [outputDimensions, inputDimensions2, inputDimensions1])",
            "b = MLXRandom.uniform(-scale ..< scale, [outputDimensions])"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "See-Also",
          "level" : 3,
          "text" : "See Also",
          "type" : "heading"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/custom-layers",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Linear",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module"
      ],
      "kind" : "relationships",
      "title" : "Inherits From",
      "type" : "inheritsFrom"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/3MLX19IndentedDescriptionP",
        "doc:\/\/mlx.swift.mlxnn\/s23CustomStringConvertibleP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/MultiHeadAttention"
      ],
      "title" : "Other Layers"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Bilinear\/init(_:_:_:bias:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Bilinear\/callAsFunction(_:_:)",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Bilinear\/describeExtra(_:)"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/mlxnn\/bilinear"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://mlx.swift.mlxnn/3MLX19IndentedDescriptionP": {
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/3MLX19IndentedDescriptionP",
  "title" : "MLX.IndentedDescription",
  "type" : "unresolvable"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN": {
  "abstract" : [
    {
      "text" : "Neural Networks support for MLX",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "MLXNN",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Bilinear": {
  "abstract" : [
    {
      "text" : "Applies a bilinear transformation to the inputs.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Bilinear"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Bilinear",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Bilinear"
    }
  ],
  "role" : "symbol",
  "title" : "Bilinear",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/bilinear"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Bilinear/callAsFunction(_:_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "callAsFunction"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Bilinear\/callAsFunction(_:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "callAsFunction(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/bilinear\/callasfunction(_:_:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Bilinear/describeExtra(_:)": {
  "abstract" : [
    {
      "text" : "Describe the ",
      "type" : "text"
    },
    {
      "code" : "inputDimensions",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "outputDimensions",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "describeExtra"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Bilinear\/describeExtra(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "describeExtra(_:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/bilinear\/describeextra(_:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Bilinear/init(_:_:_:bias:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "bias"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Bilinear\/init(_:_:_:bias:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:_:_:bias:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/bilinear\/init(_:_:_:bias:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Linear": {
  "abstract" : [
    {
      "text" : "Applies an affine transformation to the input.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Linear"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Linear",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Linear"
    }
  ],
  "role" : "symbol",
  "title" : "Linear",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/linear"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module": {
  "abstract" : [
    {
      "text" : "Base class for building neural networks with MLX.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Module"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Module"
    }
  ],
  "role" : "symbol",
  "title" : "Module",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/MultiHeadAttention": {
  "abstract" : [
    {
      "text" : "Implements the scaled dot product attention with multiple heads.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MultiHeadAttention"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/MultiHeadAttention",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MultiHeadAttention"
    }
  ],
  "role" : "symbol",
  "title" : "MultiHeadAttention",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/multiheadattention"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/custom-layers": {
  "abstract" : [
    {
      "text" : "Creating custom modules using ",
      "type" : "text"
    },
    {
      "code" : "MLXNN",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/custom-layers",
  "kind" : "article",
  "role" : "article",
  "title" : "Creating Modules",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/custom-layers"
},
"doc://mlx.swift.mlxnn/s23CustomStringConvertibleP": {
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/s23CustomStringConvertibleP",
  "title" : "Swift.CustomStringConvertible",
  "type" : "unresolvable"
}
}
}