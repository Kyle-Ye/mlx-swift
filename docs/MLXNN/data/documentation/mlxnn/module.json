{
  "abstract" : [
    {
      "text" : "Base class for building neural networks with MLX.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:5MLXNN6ModuleC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Module"
      }
    ],
    "modules" : [
      {
        "name" : "MLXNN"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "Module"
      }
    ],
    "remoteSource" : {
      "fileName" : "Module.swift",
      "url" : "https:\/\/github.com\/ml-explore\/mlx-swift\/blob\/main\/Source\/MLXNN\/Module.swift#L72"
    },
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "Module"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "Module"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "All the layers provided in ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/layers",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " subclass this class and",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "your models should do the same.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "A ",
              "type" : "text"
            },
            {
              "code" : "Module",
              "type" : "codeVoice"
            },
            {
              "text" : " can contain other ",
              "type" : "text"
            },
            {
              "code" : "Module",
              "type" : "codeVoice"
            },
            {
              "text" : " instances or ",
              "type" : "text"
            },
            {
              "code" : "MLXArray",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "instances in structures of ",
              "type" : "text"
            },
            {
              "code" : "Array",
              "type" : "codeVoice"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "code" : "Dictionary",
              "type" : "codeVoice"
            },
            {
              "text" : ". The ",
              "type" : "text"
            },
            {
              "code" : "Module",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "then allows recursively extracting all the ",
              "type" : "text"
            },
            {
              "code" : "MLXArray",
              "type" : "codeVoice"
            },
            {
              "text" : " instances",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "using ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/parameters()",
              "isActive" : true,
              "type" : "reference"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "In addition, the ",
              "type" : "text"
            },
            {
              "code" : "Module",
              "type" : "codeVoice"
            },
            {
              "text" : " has the concept of trainable and non trainable",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "parameters (called “frozen”). When using ",
              "type" : "text"
            },
            {
              "code" : "valueAndGrad()",
              "type" : "codeVoice"
            },
            {
              "text" : " or ",
              "type" : "text"
            },
            {
              "code" : "grad()",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the gradients are returned only with respect to the trainable parameters.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "All arrays in a module are trainable unless they are added in the “frozen”",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "set by calling ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/freeze(recursive:keys:strict:)",
              "isActive" : true,
              "type" : "reference"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "import MLX",
            "import MLXNN",
            "",
            "class MyMLP : Module, UnaryLayer {",
            "    let inProjection: Linear",
            "    let outProjection: Linear",
            "",
            "    init(inputDimensions: Int, outputDimensions: Int, hiddenDimensions: Int = 16) {",
            "        self.inProjection = Linear(inputDimensions, hiddenDimensions)",
            "        sel.outProjection = Linear(hiddenDimensions, outputDimensions)",
            "    }",
            "",
            "    func callAsFunction(_ x: MLXArray) -> MLXArray {",
            "        var x = inProjection(x)",
            "        x = maximum(x, 0)",
            "        return outProjection(x)",
            "    }",
            "}",
            "",
            "let model = MyMLP(inputDimensions: 2, outputDimensions: 1)",
            "",
            "\/\/ All the model parameters are created but since MLX is lazy by",
            "\/\/ default, they are not evaluated yet. Calling `eval` actually",
            "\/\/ allocates memory and initializes the parameters.",
            "eval(model.parameters())",
            "",
            "\/\/ and projecting a value through the model:",
            "let input: MLXArray ...",
            "let result = model(input)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Please read ",
                  "type" : "text"
                },
                {
                  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/custom-layers",
                  "isActive" : true,
                  "type" : "reference"
                },
                {
                  "text" : " for more information about implementing custom layers",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "including how to override the module and parameter keys and allowing dynamic updates of the",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "module structure to occur via ",
                  "type" : "text"
                },
                {
                  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/update(modules:verify:)",
                  "isActive" : true,
                  "type" : "reference"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "anchor" : "See-Also",
          "level" : 3,
          "text" : "See Also",
          "type" : "heading"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/custom-layers",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Bilinear",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/CELU",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Conv1d",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Conv2d",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Dropout",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Dropout2d",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Dropout3d",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Embedding",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/GELU",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/GLU",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/HardSwish",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Identity",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/LeakyReLU",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Linear",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/LogSigmoid",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/LogSoftMax",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Mish",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/MultiHeadAttention",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/PReLU",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/RMSNorm",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ReLU",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Relu6",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/RoPE",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/SELU",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Sequential",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/SiLU",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Sigmoid",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/SoftMax",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/SoftPlus",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/SoftSign",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Step",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Tanh"
      ],
      "kind" : "relationships",
      "title" : "Inherited By",
      "type" : "inheritedBy"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/3MLX19IndentedDescriptionP",
        "doc:\/\/mlx.swift.mlxnn\/s23CustomStringConvertibleP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/UnaryLayer",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleParameters",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleChilren",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleItem",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleItems",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue"
      ],
      "title" : "Base Classes and Interfaces"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/apply(filter:map:)",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterMap(filter:map:isLeaf:)",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/mapParameters(map:isLeaf:)",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/parameters()",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/trainableParameters()",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/update(parameters:)",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/update(parameters:verify:)"
      ],
      "title" : "Parameters"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/children()",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterMap(filter:map:isLeaf:)",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/leafModules()",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/modules()",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/namedModules()",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/update(modules:)",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/update(modules:verify:)",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/visit(modules:)"
      ],
      "title" : "Layers (sub-modules)"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/children()",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterMap(filter:map:isLeaf:)",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/leafModules()",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/items()",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/visit(modules:)"
      ],
      "title" : "Traversal"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/freeze(recursive:keys:)",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/freeze(recursive:keys:strict:)",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/train(mode:)",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/unfreeze(recursive:keys:)",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/unfreeze(recursive:keys:strict:)"
      ],
      "title" : "Training"
    },
    {
      "abstract" : [
        {
          "text" : "Values usable as the ",
          "type" : "text"
        },
        {
          "code" : "filter:",
          "type" : "codeVoice"
        },
        {
          "text" : " parameter in ",
          "type" : "text"
        },
        {
          "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterMap(filter:map:isLeaf:)",
          "isActive" : true,
          "type" : "reference"
        },
        {
          "text" : ".",
          "type" : "text"
        }
      ],
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterAll",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterLocalParameters",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterOther",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterTrainableParameters",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterValidChild",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterValidParameters"
      ],
      "title" : "Key\/Value Filter Functions"
    },
    {
      "abstract" : [
        {
          "text" : "Values usable as the ",
          "type" : "text"
        },
        {
          "code" : "isLeaf:",
          "type" : "codeVoice"
        },
        {
          "text" : " parameter in ",
          "type" : "text"
        },
        {
          "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterMap(filter:map:isLeaf:)",
          "isActive" : true,
          "type" : "reference"
        },
        {
          "text" : ".",
          "type" : "text"
        }
      ],
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/isLeafDefault",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/isLeafModule",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/isLeafModuleNoChildren"
      ],
      "title" : "isLeaf Functions"
    },
    {
      "abstract" : [
        {
          "text" : "Functions useful for building the ",
          "type" : "text"
        },
        {
          "code" : "map:",
          "type" : "codeVoice"
        },
        {
          "text" : " parameter in ",
          "type" : "text"
        },
        {
          "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterMap(filter:map:isLeaf:)",
          "isActive" : true,
          "type" : "reference"
        },
        {
          "text" : ".",
          "type" : "text"
        }
      ],
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/mapModule(map:)",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/mapOther(map:)",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/mapParameters(map:)"
      ],
      "title" : "Map Functions"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/VerifyUpdate"
      ],
      "title" : "Structures"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/init()"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/noGrad",
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/training"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/describeExtra(_:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/IndentedDescription-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/mlxnn\/module"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://mlx.swift.mlxnn/3MLX19IndentedDescriptionP": {
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/3MLX19IndentedDescriptionP",
  "title" : "MLX.IndentedDescription",
  "type" : "unresolvable"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "MLXNN",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Bilinear": {
  "abstract" : [
    {
      "text" : "Applies a bilinear transformation to the inputs.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Bilinear"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Bilinear",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Bilinear"
    }
  ],
  "role" : "symbol",
  "title" : "Bilinear",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/bilinear"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/CELU": {
  "abstract" : [
    {
      "text" : "Applies the Continuously Differentiable Exponential Linear Unit.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CELU"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/CELU",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CELU"
    }
  ],
  "role" : "symbol",
  "title" : "CELU",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/celu"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Conv1d": {
  "abstract" : [
    {
      "text" : "Applies a 1-dimensional convolution over the multi-channel input sequence.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Conv1d"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Conv1d",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Conv1d"
    }
  ],
  "role" : "symbol",
  "title" : "Conv1d",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/conv1d"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Conv2d": {
  "abstract" : [
    {
      "text" : "Applies a 2-dimensional convolution over the multi-channel input image.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Conv2d"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Conv2d",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Conv2d"
    }
  ],
  "role" : "symbol",
  "title" : "Conv2d",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/conv2d"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Dropout": {
  "abstract" : [
    {
      "text" : "Randomly zero a portion of the elements during training.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Dropout"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Dropout",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Dropout"
    }
  ],
  "role" : "symbol",
  "title" : "Dropout",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/dropout"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Dropout2d": {
  "abstract" : [
    {
      "text" : "Apply 2D channel-wise dropout during training.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Dropout2d"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Dropout2d",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Dropout2d"
    }
  ],
  "role" : "symbol",
  "title" : "Dropout2d",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/dropout2d"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Dropout3d": {
  "abstract" : [
    {
      "text" : "Apply 3D channel-wise dropout during training.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Dropout3d"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Dropout3d",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Dropout3d"
    }
  ],
  "role" : "symbol",
  "title" : "Dropout3d",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/dropout3d"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Embedding": {
  "abstract" : [
    {
      "text" : "Implements a simple lookup table that maps each input integer to a high-dimensional vector.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Embedding"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Embedding",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Embedding"
    }
  ],
  "role" : "symbol",
  "title" : "Embedding",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/embedding"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/GELU": {
  "abstract" : [
    {
      "text" : "Applies the Gaussian Error Linear Units function.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "GELU"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/GELU",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "GELU"
    }
  ],
  "role" : "symbol",
  "title" : "GELU",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/gelu"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/GLU": {
  "abstract" : [
    {
      "text" : "Applies the gated linear unit function.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "GLU"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/GLU",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "GLU"
    }
  ],
  "role" : "symbol",
  "title" : "GLU",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/glu"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/HardSwish": {
  "abstract" : [
    {
      "text" : "Applies the hardswish function, element-wise",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HardSwish"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/HardSwish",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HardSwish"
    }
  ],
  "role" : "symbol",
  "title" : "HardSwish",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/hardswish"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Identity": {
  "abstract" : [
    {
      "text" : "A placeholder identity operator that is argument-insensitive.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Identity"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Identity",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Identity"
    }
  ],
  "role" : "symbol",
  "title" : "Identity",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/identity"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/LeakyReLU": {
  "abstract" : [
    {
      "text" : "Applies the Leaky Rectified Linear Unit.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LeakyReLU"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/LeakyReLU",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LeakyReLU"
    }
  ],
  "role" : "symbol",
  "title" : "LeakyReLU",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/leakyrelu"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Linear": {
  "abstract" : [
    {
      "text" : "Applies an affine transformation to the input.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Linear"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Linear",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Linear"
    }
  ],
  "role" : "symbol",
  "title" : "Linear",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/linear"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/LogSigmoid": {
  "abstract" : [
    {
      "text" : "Applies the Log Sigmoid function.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LogSigmoid"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/LogSigmoid",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LogSigmoid"
    }
  ],
  "role" : "symbol",
  "title" : "LogSigmoid",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/logsigmoid"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/LogSoftMax": {
  "abstract" : [
    {
      "text" : "Applies the Log Softmax function.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LogSoftMax"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/LogSoftMax",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LogSoftMax"
    }
  ],
  "role" : "symbol",
  "title" : "LogSoftMax",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/logsoftmax"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Mish": {
  "abstract" : [
    {
      "text" : "Applies the Mish function, element-wise.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Mish"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Mish",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Mish"
    }
  ],
  "role" : "symbol",
  "title" : "Mish",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/mish"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module": {
  "abstract" : [
    {
      "text" : "Base class for building neural networks with MLX.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Module"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Module"
    }
  ],
  "role" : "symbol",
  "title" : "Module",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/IndentedDescription-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/IndentedDescription-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "IndentedDescription Implementations",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/indenteddescription-implementations"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/VerifyUpdate": {
  "abstract" : [
    {
      "text" : "Options for verifying ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/update(parameters:verify:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/update(modules:verify:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VerifyUpdate"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/VerifyUpdate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VerifyUpdate"
    }
  ],
  "role" : "symbol",
  "title" : "Module.VerifyUpdate",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/verifyupdate"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/apply(filter:map:)": {
  "abstract" : [
    {
      "text" : "Apply a closure to the parameters in a ",
      "type" : "text"
    },
    {
      "code" : "Module",
      "type" : "codeVoice"
    },
    {
      "text" : " recursively.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "apply"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "filter"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "map"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/apply(filter:map:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "apply(filter:map:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/apply(filter:map:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/children()": {
  "abstract" : [
    {
      "text" : "Produces a ",
      "type" : "text"
    },
    {
      "code" : "NestedDictionary<String, Module>",
      "type" : "codeVoice"
    },
    {
      "text" : " for all direct children of the module.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "children"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN13ModuleChilrena",
      "text" : "ModuleChilren"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/children()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "children()",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/children()"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/describeExtra(_:)": {
  "abstract" : [
    {
      "text" : "Describe extra parameters.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "describeExtra"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/describeExtra(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "describeExtra(_:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/describeextra(_:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/filterAll": {
  "abstract" : [
    {
      "text" : "Filter that will accept all values.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "filterAll"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterAll",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "filterAll",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/filterall"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/filterLocalParameters": {
  "abstract" : [
    {
      "text" : "Filter that will accept all structure (",
      "type" : "text"
    },
    {
      "code" : ".array",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : ".dictionary",
      "type" : "codeVoice"
    },
    {
      "text" : ") and ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue\/parameters(_:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "without allowing recursion into sub-Modules (layers).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "filterLocalParameters"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterLocalParameters",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "filterLocalParameters",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/filterlocalparameters"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/filterMap(filter:map:isLeaf:)": {
  "abstract" : [
    {
      "text" : "Recursively filter and map the contents of the module and its children and produce a ",
      "type" : "text"
    },
    {
      "code" : "NestedDictionary",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "with the results.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "filterMap"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "filter"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "map"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "isLeaf"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX16NestedDictionaryV",
      "text" : "NestedDictionary"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterMap(filter:map:isLeaf:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "filterMap(filter:map:isLeaf:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/filtermap(filter:map:isleaf:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/filterOther": {
  "abstract" : [
    {
      "text" : "Filter that will accept all structure (",
      "type" : "text"
    },
    {
      "code" : ".array",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : ".dictionary",
      "type" : "codeVoice"
    },
    {
      "text" : ") and ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue\/other(_:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "filterOther"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterOther",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "filterOther",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/filterother"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/filterTrainableParameters": {
  "abstract" : [
    {
      "text" : "Filter that will accept all structure (",
      "type" : "text"
    },
    {
      "code" : ".array",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : ".dictionary",
      "type" : "codeVoice"
    },
    {
      "text" : ") and ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue\/parameters(_:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "or ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue\/module(_:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " that are not in the ",
      "type" : "text"
    },
    {
      "code" : "noGrad",
      "type" : "codeVoice"
    },
    {
      "text" : " set.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "filterTrainableParameters"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterTrainableParameters",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "filterTrainableParameters",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/filtertrainableparameters"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/filterValidChild": {
  "abstract" : [
    {
      "text" : "Filter that will accept all structure (",
      "type" : "text"
    },
    {
      "code" : ".array",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : ".dictionary",
      "type" : "codeVoice"
    },
    {
      "text" : ") and ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue\/module(_:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "filterValidChild"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterValidChild",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "filterValidChild",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/filtervalidchild"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/filterValidParameters": {
  "abstract" : [
    {
      "text" : "Filter that will accept all structure (",
      "type" : "text"
    },
    {
      "code" : ".array",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : ".dictionary",
      "type" : "codeVoice"
    },
    {
      "text" : ") and ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue\/parameters(_:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "or ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue\/module(_:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " allowing recursion into sub-Modules (layers).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "filterValidParameters"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterValidParameters",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "filterValidParameters",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/filtervalidparameters"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/freeze(recursive:keys:)": {
  "abstract" : [
    {
      "text" : "Non-throwing variant of ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/freeze(recursive:keys:strict:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " (",
      "type" : "text"
    },
    {
      "code" : "strict: false)",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "freeze"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "recursive"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "keys"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]?)"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/freeze(recursive:keys:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "freeze(recursive:keys:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/freeze(recursive:keys:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/freeze(recursive:keys:strict:)": {
  "abstract" : [
    {
      "text" : "Freeze the ",
      "type" : "text"
    },
    {
      "code" : "Module",
      "type" : "codeVoice"
    },
    {
      "text" : "’s parameters or subset.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "freeze"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "recursive"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "keys"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]?, "
    },
    {
      "kind" : "externalParam",
      "text" : "strict"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/freeze(recursive:keys:strict:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "freeze(recursive:keys:strict:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/freeze(recursive:keys:strict:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/init()": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/init()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/init()"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/isLeafDefault": {
  "abstract" : [
    {
      "text" : "Default leaf filter – treat ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue\/parameters(_:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue\/other(_:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " as leaves.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isLeafDefault"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/isLeafDefault",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isLeafDefault",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/isleafdefault"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/isLeafModule": {
  "abstract" : [
    {
      "text" : "Leaf filter that will stop at ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue\/module(_:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " and recurse into all other structure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isLeafModule"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/isLeafModule",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isLeafModule",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/isleafmodule"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/isLeafModuleNoChildren": {
  "abstract" : [
    {
      "text" : "Leaf filter that will stop at ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue\/module(_:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " if they have no child modules and recurse into all other structure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isLeafModuleNoChildren"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/isLeafModuleNoChildren",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isLeafModuleNoChildren",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/isleafmodulenochildren"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/items()": {
  "abstract" : [
    {
      "text" : "Return a ",
      "type" : "text"
    },
    {
      "code" : "NestedDictionary",
      "type" : "codeVoice"
    },
    {
      "text" : " structure of ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleItem",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " representing the ivars of the ",
      "type" : "text"
    },
    {
      "code" : "Module",
      "type" : "codeVoice"
    },
    {
      "text" : " instance.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "items"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN11ModuleItemsa",
      "text" : "ModuleItems"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/items()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "items()",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/items()"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/leafModules()": {
  "abstract" : [
    {
      "text" : "Produces a ",
      "type" : "text"
    },
    {
      "code" : "NestedDictionary<String, Module>",
      "type" : "codeVoice"
    },
    {
      "text" : " for all leaf modules module.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "leafModules"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN13ModuleChilrena",
      "text" : "ModuleChilren"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/leafModules()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "leafModules()",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/leafmodules()"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/mapModule(map:)": {
  "abstract" : [
    {
      "text" : "Function that will turn a ",
      "type" : "text"
    },
    {
      "code" : "(Module) -> Result?",
      "type" : "codeVoice"
    },
    {
      "text" : " into a function suitable for use in ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterMap(filter:map:isLeaf:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "mapModule"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "map"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "?) -> ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/mapModule(map:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "mapModule(map:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/mapmodule(map:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/mapOther(map:)": {
  "abstract" : [
    {
      "text" : "Function that will turn a ",
      "type" : "text"
    },
    {
      "code" : "(Any) -> Result?",
      "type" : "codeVoice"
    },
    {
      "text" : " into a function suitable for use in ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterMap(filter:map:isLeaf:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "mapOther"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "map"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "?) -> ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/mapOther(map:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "mapOther(map:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/mapother(map:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/mapParameters(map:)": {
  "abstract" : [
    {
      "text" : "Function that will turn a ",
      "type" : "text"
    },
    {
      "code" : "(MLXArray) -> Result?",
      "type" : "codeVoice"
    },
    {
      "text" : " into a function suitable for use in ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/filterMap(filter:map:isLeaf:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "mapParameters"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "map"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "?) -> ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/mapParameters(map:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "mapParameters(map:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/mapparameters(map:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/mapParameters(map:isLeaf:)": {
  "abstract" : [
    {
      "text" : "Apply a ",
      "type" : "text"
    },
    {
      "code" : "map",
      "type" : "codeVoice"
    },
    {
      "text" : " to all parameters (",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue\/parameters(_:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ") in the module and its children.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "mapParameters"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "map"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "isLeaf"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN10ModuleItema",
      "text" : "ModuleItem"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX16NestedDictionaryV",
      "text" : "NestedDictionary"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/mapParameters(map:isLeaf:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "mapParameters(map:isLeaf:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/mapparameters(map:isleaf:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/modules()": {
  "abstract" : [
    {
      "text" : "Return a flat array of all the ",
      "type" : "text"
    },
    {
      "code" : "Module",
      "type" : "codeVoice"
    },
    {
      "text" : " in the instance (including self).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "modules"
    },
    {
      "kind" : "text",
      "text" : "() -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/modules()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "modules()",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/modules()"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/namedModules()": {
  "abstract" : [
    {
      "text" : "Return a flat array of all the ",
      "type" : "text"
    },
    {
      "code" : "Module",
      "type" : "codeVoice"
    },
    {
      "text" : " in the instance (including self) with their keys.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "namedModules"
    },
    {
      "kind" : "text",
      "text" : "() -> [("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ")]"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/namedModules()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "namedModules()",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/namedmodules()"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/noGrad": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "noGrad"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/noGrad",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "noGrad",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/nograd"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/parameters()": {
  "abstract" : [
    {
      "text" : "Return a ",
      "type" : "text"
    },
    {
      "code" : "NestedDictionary<String, MLXArray>",
      "type" : "codeVoice"
    },
    {
      "text" : " for all parameters in the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "model (all layers).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "parameters"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN16ModuleParametersa",
      "text" : "ModuleParameters"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/parameters()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "parameters()",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/parameters()"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/train(mode:)": {
  "abstract" : [
    {
      "text" : "Recursively set the model’s training mode.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "train"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "mode"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/train(mode:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "train(mode:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/train(mode:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/trainableParameters()": {
  "abstract" : [
    {
      "text" : "Return a ",
      "type" : "text"
    },
    {
      "code" : "NestedDictionary<String, MLXArray>",
      "type" : "codeVoice"
    },
    {
      "text" : " for all trainable parameters in the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "model (all layers).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "trainableParameters"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN16ModuleParametersa",
      "text" : "ModuleParameters"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/trainableParameters()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "trainableParameters()",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/trainableparameters()"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/training": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "training"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/training",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "training",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/training"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/unfreeze(recursive:keys:)": {
  "abstract" : [
    {
      "text" : "Non-throwing variant of ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/unfreeze(recursive:keys:strict:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " (",
      "type" : "text"
    },
    {
      "code" : "strict: false)",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unfreeze"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "recursive"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "keys"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]?)"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/unfreeze(recursive:keys:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "unfreeze(recursive:keys:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/unfreeze(recursive:keys:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/unfreeze(recursive:keys:strict:)": {
  "abstract" : [
    {
      "text" : "Unfreeze the ",
      "type" : "text"
    },
    {
      "code" : "Module",
      "type" : "codeVoice"
    },
    {
      "text" : "’s parameters or subset.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unfreeze"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "recursive"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "keys"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]?, "
    },
    {
      "kind" : "externalParam",
      "text" : "strict"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/unfreeze(recursive:keys:strict:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "unfreeze(recursive:keys:strict:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/unfreeze(recursive:keys:strict:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/update(modules:)": {
  "abstract" : [
    {
      "text" : "A non-throwing version of ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/update(modules:verify:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "update"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "modules"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN13ModuleChilrena",
      "text" : "ModuleChilren"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/update(modules:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "update(modules:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/update(modules:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/update(modules:verify:)": {
  "abstract" : [
    {
      "text" : "Replace the child modules of this ",
      "type" : "text"
    },
    {
      "code" : "Module",
      "type" : "codeVoice"
    },
    {
      "text" : " with the provided replacements.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "update"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "modules"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN13ModuleChilrena",
      "text" : "ModuleChilren"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "verify"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC12VerifyUpdateV",
      "text" : "VerifyUpdate"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/update(modules:verify:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "update(modules:verify:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/update(modules:verify:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/update(parameters:)": {
  "abstract" : [
    {
      "text" : "A non-throwing version of ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/update(parameters:verify:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "update"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "parameters"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN16ModuleParametersa",
      "text" : "ModuleParameters"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/update(parameters:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "update(parameters:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/update(parameters:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/update(parameters:verify:)": {
  "abstract" : [
    {
      "text" : "Replace the parameters of this ",
      "type" : "text"
    },
    {
      "code" : "Module",
      "type" : "codeVoice"
    },
    {
      "text" : " with the provided parameters.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "update"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "parameters"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN16ModuleParametersa",
      "text" : "ModuleParameters"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "verify"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC12VerifyUpdateV",
      "text" : "VerifyUpdate"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/update(parameters:verify:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "update(parameters:verify:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/update(parameters:verify:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Module/visit(modules:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "visit"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "modules"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/visit(modules:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "visit(modules:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/module\/visit(modules:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/ModuleChilren": {
  "abstract" : [
    {
      "code" : "NestedDictionary",
      "type" : "codeVoice"
    },
    {
      "text" : " structure of ",
      "type" : "text"
    },
    {
      "code" : "Module",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ModuleChilren"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleChilren",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ModuleChilren"
    }
  ],
  "role" : "symbol",
  "title" : "ModuleChilren",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/modulechilren"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/ModuleItem": {
  "abstract" : [
    {
      "text" : "Single item from ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/items()",
      "isActive" : true,
      "type" : "reference"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ModuleItem"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleItem",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ModuleItem"
    }
  ],
  "role" : "symbol",
  "title" : "ModuleItem",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/moduleitem"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/ModuleItems": {
  "abstract" : [
    {
      "code" : "NestedDictionary",
      "type" : "codeVoice"
    },
    {
      "text" : " structure of ",
      "type" : "text"
    },
    {
      "code" : "ModuleValue",
      "type" : "codeVoice"
    },
    {
      "text" : " from ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module\/items()",
      "isActive" : true,
      "type" : "reference"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ModuleItems"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleItems",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ModuleItems"
    }
  ],
  "role" : "symbol",
  "title" : "ModuleItems",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/moduleitems"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/ModuleParameters": {
  "abstract" : [
    {
      "code" : "NestedDictionary",
      "type" : "codeVoice"
    },
    {
      "text" : " structure of ",
      "type" : "text"
    },
    {
      "code" : "MLXArray",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ModuleParameters"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleParameters",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ModuleParameters"
    }
  ],
  "role" : "symbol",
  "title" : "ModuleParameters",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/moduleparameters"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/ModuleValue": {
  "abstract" : [
    {
      "text" : "A single value from ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ModuleValue"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ModuleValue"
    }
  ],
  "role" : "symbol",
  "title" : "ModuleValue",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/modulevalue"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/ModuleValue/module(_:)": {
  "abstract" : [
    {
      "text" : "A module value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "module"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue\/module(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ModuleValue.module(_:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/modulevalue\/module(_:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/ModuleValue/other(_:)": {
  "abstract" : [
    {
      "text" : "A non-MLXArray and non-Module value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "other"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue\/other(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ModuleValue.other(_:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/modulevalue\/other(_:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/ModuleValue/parameters(_:)": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "MLXArray",
      "type" : "codeVoice"
    },
    {
      "text" : " parameters value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "parameters"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ModuleValue\/parameters(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ModuleValue.parameters(_:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/modulevalue\/parameters(_:)"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/MultiHeadAttention": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MultiHeadAttention"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/MultiHeadAttention",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MultiHeadAttention"
    }
  ],
  "role" : "symbol",
  "title" : "MultiHeadAttention",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/multiheadattention"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/PReLU": {
  "abstract" : [
    {
      "text" : "Applies the element-wise parametric ReLU.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PReLU"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/PReLU",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PReLU"
    }
  ],
  "role" : "symbol",
  "title" : "PReLU",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/prelu"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/RMSNorm": {
  "abstract" : [
    {
      "text" : "Applies Root Mean Square normalization [1] to the inputs.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RMSNorm"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/RMSNorm",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RMSNorm"
    }
  ],
  "role" : "symbol",
  "title" : "RMSNorm",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/rmsnorm"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/ReLU": {
  "abstract" : [
    {
      "text" : "Applies the Rectified Linear Unit.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ReLU"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/ReLU",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ReLU"
    }
  ],
  "role" : "symbol",
  "title" : "ReLU",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/relu"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Relu6": {
  "abstract" : [
    {
      "text" : "Applies the Rectified Linear Unit 6.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Relu6"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Relu6",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Relu6"
    }
  ],
  "role" : "symbol",
  "title" : "Relu6",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/relu6"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/RoPE": {
  "abstract" : [
    {
      "text" : "Implements the rotary positional encoding.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RoPE"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/RoPE",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RoPE"
    }
  ],
  "role" : "symbol",
  "title" : "RoPE",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/rope"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/SELU": {
  "abstract" : [
    {
      "text" : "Applies the Scaled Exponential Linear Unit.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SELU"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/SELU",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SELU"
    }
  ],
  "role" : "symbol",
  "title" : "SELU",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/selu"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Sequential": {
  "abstract" : [
    {
      "text" : "A layer that calls the passed ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/UnaryLayer",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " in order.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Sequential"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Sequential",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Sequential"
    }
  ],
  "role" : "symbol",
  "title" : "Sequential",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/sequential"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/SiLU": {
  "abstract" : [
    {
      "text" : "Applies the Sigmoid Linear Unit. Also known as Swish.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SiLU"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/SiLU",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SiLU"
    }
  ],
  "role" : "symbol",
  "title" : "SiLU",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/silu"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Sigmoid": {
  "abstract" : [
    {
      "text" : "Applies the element-wise logistic sigmoid.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Sigmoid"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Sigmoid",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Sigmoid"
    }
  ],
  "role" : "symbol",
  "title" : "Sigmoid",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/sigmoid"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/SoftMax": {
  "abstract" : [
    {
      "text" : "Applies the Softmax function.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SoftMax"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/SoftMax",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SoftMax"
    }
  ],
  "role" : "symbol",
  "title" : "SoftMax",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/softmax"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/SoftPlus": {
  "abstract" : [
    {
      "text" : "Applies the Softplus function.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SoftPlus"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/SoftPlus",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SoftPlus"
    }
  ],
  "role" : "symbol",
  "title" : "SoftPlus",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/softplus"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/SoftSign": {
  "abstract" : [
    {
      "text" : "Applies the Softsign function.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SoftSign"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/SoftSign",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SoftSign"
    }
  ],
  "role" : "symbol",
  "title" : "SoftSign",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/softsign"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Step": {
  "abstract" : [
    {
      "text" : "Applies the Step Activation Function.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Step"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Step",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Step"
    }
  ],
  "role" : "symbol",
  "title" : "Step",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/step"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/Tanh": {
  "abstract" : [
    {
      "text" : "Applies the hyperbolic tangent function",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Tanh"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Tanh",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Tanh"
    }
  ],
  "role" : "symbol",
  "title" : "Tanh",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/tanh"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/UnaryLayer": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "Layer",
      "type" : "codeVoice"
    },
    {
      "text" : " (",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/Module",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " subclass) that can be evaluated as a ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "unary function",
          "type" : "text"
        }
      ],
      "type" : "emphasis"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UnaryLayer"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/UnaryLayer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UnaryLayer"
    }
  ],
  "role" : "symbol",
  "title" : "UnaryLayer",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/unarylayer"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/custom-layers": {
  "abstract" : [
    {
      "text" : "Creating custom modules using ",
      "type" : "text"
    },
    {
      "code" : "MLXNN",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/custom-layers",
  "kind" : "article",
  "role" : "article",
  "title" : "Creating Modules",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/custom-layers"
},
"doc://mlx.swift.mlxnn/documentation/MLXNN/layers": {
  "abstract" : [
    {
      "text" : "Built-in layers.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/documentation\/MLXNN\/layers",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Layers",
  "type" : "topic",
  "url" : "\/documentation\/mlxnn\/layers"
},
"doc://mlx.swift.mlxnn/s23CustomStringConvertibleP": {
  "identifier" : "doc:\/\/mlx.swift.mlxnn\/s23CustomStringConvertibleP",
  "title" : "Swift.CustomStringConvertible",
  "type" : "unresolvable"
}
}
}