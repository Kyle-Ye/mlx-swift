{
  "abstract" : [
    {
      "text" : "The base class for all optimizers. It allows us to implement an optimizer on a per-parameter basis",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and apply it to a parameter tree.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/OptimizerBase"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:13MLXOptimizers13OptimizerBaseC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "OptimizerBase"
      }
    ],
    "modules" : [
      {
        "name" : "MLXOptimizers"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "OptimizerBase"
      }
    ],
    "remoteSource" : {
      "fileName" : "Optimizers.swift",
      "url" : "https:\/\/github.com\/ml-explore\/mlx-swift\/blob\/main\/Source\/MLXOptimizers\/Optimizers.swift#L31"
    },
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "OptimizerBase"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "OptimizerBase"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "State"
            },
            {
              "kind" : "text",
              "text" : ">"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Subclasses need to implement:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "func newState(gradient: MLXArray) -> State",
                      "type" : "codeVoice"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "func parameters() -> ModuleParameters",
                      "type" : "codeVoice"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "func applySingle(gradient: MLXArray, parameter: MLXArray, state: State) -> (MLXArray, State)",
                      "type" : "codeVoice"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "anchor" : "See-Also",
          "level" : 3,
          "text" : "See Also",
          "type" : "heading"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/AdaDelta",
        "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/Adafactor",
        "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/Adam",
        "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/Adamax",
        "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/OptimizerBaseArrayState"
      ],
      "kind" : "relationships",
      "title" : "Inherited By",
      "type" : "inheritedBy"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/Optimizer"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/Optimizer",
        "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/OptimizerBaseArrayState"
      ],
      "title" : "Base Classes and Protocols"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/OptimizerBase\/state()",
        "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/OptimizerBase\/update(model:gradients:)"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/mlxoptimizers\/optimizerbase"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://mlx.swift.mlxoptimizers/documentation/MLXOptimizers": {
  "abstract" : [
    {
      "text" : "Built-in optimizers.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "MLXOptimizers",
  "type" : "topic",
  "url" : "\/documentation\/mlxoptimizers"
},
"doc://mlx.swift.mlxoptimizers/documentation/MLXOptimizers/AdaDelta": {
  "abstract" : [
    {
      "text" : "The AdaDelta optimizer with a learning rate [1].",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AdaDelta"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/AdaDelta",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AdaDelta"
    }
  ],
  "role" : "symbol",
  "title" : "AdaDelta",
  "type" : "topic",
  "url" : "\/documentation\/mlxoptimizers\/adadelta"
},
"doc://mlx.swift.mlxoptimizers/documentation/MLXOptimizers/Adafactor": {
  "abstract" : [
    {
      "text" : "The Adafactor optimizer.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Adafactor"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/Adafactor",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Adafactor"
    }
  ],
  "role" : "symbol",
  "title" : "Adafactor",
  "type" : "topic",
  "url" : "\/documentation\/mlxoptimizers\/adafactor"
},
"doc://mlx.swift.mlxoptimizers/documentation/MLXOptimizers/Adam": {
  "abstract" : [
    {
      "text" : "The Adam optimizer [1].",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Adam"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/Adam",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Adam"
    }
  ],
  "role" : "symbol",
  "title" : "Adam",
  "type" : "topic",
  "url" : "\/documentation\/mlxoptimizers\/adam"
},
"doc://mlx.swift.mlxoptimizers/documentation/MLXOptimizers/Adamax": {
  "abstract" : [
    {
      "text" : "The Adamax optimizer, a variant of Adam based on the infinity norm [1].",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Adamax"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/Adamax",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Adamax"
    }
  ],
  "role" : "symbol",
  "title" : "Adamax",
  "type" : "topic",
  "url" : "\/documentation\/mlxoptimizers\/adamax"
},
"doc://mlx.swift.mlxoptimizers/documentation/MLXOptimizers/Optimizer": {
  "abstract" : [
    {
      "text" : "Public interface for all Optimizer types.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Optimizer"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/Optimizer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Optimizer"
    }
  ],
  "role" : "symbol",
  "title" : "Optimizer",
  "type" : "topic",
  "url" : "\/documentation\/mlxoptimizers\/optimizer"
},
"doc://mlx.swift.mlxoptimizers/documentation/MLXOptimizers/OptimizerBase": {
  "abstract" : [
    {
      "text" : "The base class for all optimizers. It allows us to implement an optimizer on a per-parameter basis",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and apply it to a parameter tree.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OptimizerBase"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/OptimizerBase",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OptimizerBase"
    }
  ],
  "role" : "symbol",
  "title" : "OptimizerBase",
  "type" : "topic",
  "url" : "\/documentation\/mlxoptimizers\/optimizerbase"
},
"doc://mlx.swift.mlxoptimizers/documentation/MLXOptimizers/OptimizerBase/state()": {
  "abstract" : [
    {
      "text" : "Return any parameters that should be passed to ",
      "type" : "text"
    },
    {
      "code" : "eval()",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "state"
    },
    {
      "kind" : "text",
      "text" : "() -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/OptimizerBase\/state()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "state()",
  "type" : "topic",
  "url" : "\/documentation\/mlxoptimizers\/optimizerbase\/state()"
},
"doc://mlx.swift.mlxoptimizers/documentation/MLXOptimizers/OptimizerBase/update(model:gradients:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "update"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "model"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN6ModuleC",
      "text" : "Module"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "gradients"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5MLXNN16ModuleParametersa",
      "text" : "ModuleParameters"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/OptimizerBase\/update(model:gradients:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "update(model:gradients:)",
  "type" : "topic",
  "url" : "\/documentation\/mlxoptimizers\/optimizerbase\/update(model:gradients:)"
},
"doc://mlx.swift.mlxoptimizers/documentation/MLXOptimizers/OptimizerBaseArrayState": {
  "abstract" : [
    {
      "text" : "Convenience subclass of OptimizerBase that provides ",
      "type" : "text"
    },
    {
      "code" : "MLXArray",
      "type" : "codeVoice"
    },
    {
      "text" : " State.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OptimizerBaseArrayState"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/OptimizerBaseArrayState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OptimizerBaseArrayState"
    }
  ],
  "role" : "symbol",
  "title" : "OptimizerBaseArrayState",
  "type" : "topic",
  "url" : "\/documentation\/mlxoptimizers\/optimizerbasearraystate"
}
}
}