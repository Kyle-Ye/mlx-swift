{
  "abstract" : [
    {
      "text" : "Inherited from ",
      "type" : "text"
    },
    {
      "code" : "Updatable.innerState()",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers",
        "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/TupleState"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/TupleState\/innerState()"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:13MLXOptimizers10TupleStateV05innerC0Say3MLX8MLXArrayCGyF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "innerState"
      },
      {
        "kind" : "text",
        "text" : "() -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:3MLX8MLXArrayC",
        "text" : "MLXArray"
      },
      {
        "kind" : "text",
        "text" : "]"
      }
    ],
    "modules" : [
      {
        "name" : "MLXOptimizers"
      }
    ],
    "remoteSource" : {
      "fileName" : "Optimizers.swift",
      "url" : "https:\/\/github.com\/ml-explore\/mlx-swift\/blob\/main\/Source\/MLXOptimizers\/Optimizers.swift#L103"
    },
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "innerState()"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "innerState"
            },
            {
              "kind" : "text",
              "text" : "() -> ["
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:3MLX8MLXArrayC",
              "text" : "MLXArray"
            },
            {
              "kind" : "text",
              "text" : "]"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/mlxoptimizers\/tuplestate\/innerstate()"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://mlx.swift.mlxoptimizers/documentation/MLXOptimizers": {
  "abstract" : [
    {
      "text" : "Built-in optimizers.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "MLXOptimizers",
  "type" : "topic",
  "url" : "\/documentation\/mlxoptimizers"
},
"doc://mlx.swift.mlxoptimizers/documentation/MLXOptimizers/OptimizerBase": {
  "abstract" : [
    {
      "text" : "The base class for all optimizers. It allows us to implement an optimizer on a per-parameter basis",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and apply it to a parameter tree.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OptimizerBase"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/OptimizerBase",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OptimizerBase"
    }
  ],
  "role" : "symbol",
  "title" : "OptimizerBase",
  "type" : "topic",
  "url" : "\/documentation\/mlxoptimizers\/optimizerbase"
},
"doc://mlx.swift.mlxoptimizers/documentation/MLXOptimizers/TupleState": {
  "abstract" : [
    {
      "text" : "State container for ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/OptimizerBase",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " holding a tuple of ",
      "type" : "text"
    },
    {
      "code" : "MLXArray",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleState"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/TupleState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleState"
    }
  ],
  "role" : "symbol",
  "title" : "TupleState",
  "type" : "topic",
  "url" : "\/documentation\/mlxoptimizers\/tuplestate"
},
"doc://mlx.swift.mlxoptimizers/documentation/MLXOptimizers/TupleState/innerState()": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "innerState"
    },
    {
      "kind" : "text",
      "text" : "() -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlxoptimizers\/documentation\/MLXOptimizers\/TupleState\/innerState()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "innerState()",
  "type" : "topic",
  "url" : "\/documentation\/mlxoptimizers\/tuplestate\/innerstate()"
}
}
}