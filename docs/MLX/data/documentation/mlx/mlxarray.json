{
  "abstract" : [
    {
      "text" : "An N dimensional array.  The main type in ",
      "type" : "text"
    },
    {
      "code" : "mlx",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:3MLX8MLXArrayC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "MLXArray"
      }
    ],
    "modules" : [
      {
        "name" : "MLX"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "MLXArray"
      }
    ],
    "remoteSource" : {
      "fileName" : "MLXArray.swift",
      "url" : "https:\/\/github.com\/ml-explore\/mlx-swift\/blob\/main\/Source\/MLX\/MLXArray.swift#L6"
    },
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "MLXArray"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "final"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "MLXArray"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "Introduction",
          "level" : 2,
          "text" : "Introduction",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "code" : "MLXArray",
              "type" : "codeVoice"
            },
            {
              "text" : " is an N dimension array that can contain a variety of data types (",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/DType",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ").",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "MLXArray",
              "type" : "codeVoice"
            },
            {
              "text" : " supports a wide range of functions and operations to manipulate it and",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "is used as the basis for the ",
              "type" : "text"
            },
            {
              "code" : "MLXNN",
              "type" : "codeVoice"
            },
            {
              "text" : " module which implements many layers that",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "are the basis for building machine learning models.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "\/\/ create an array from a swift array",
            "let a1 = MLXArray([1, 2, 3])",
            "",
            "\/\/ this holds Int32",
            "print(a1.dtype)",
            "",
            "\/\/ and has a shape of [3]",
            "print(a1.shape)",
            "",
            "\/\/ there are a variety of operators and functions that can be used",
            "let a2 = sqrt(a1 * 3)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Thread-Safety",
          "level" : 2,
          "text" : "Thread Safety",
          "type" : "heading"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "code" : "MXArray",
                  "type" : "codeVoice"
                },
                {
                  "text" : " is not thread safe.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "inlineContent" : [
            {
              "text" : "Although ",
              "type" : "text"
            },
            {
              "code" : "MLXArray",
              "type" : "codeVoice"
            },
            {
              "text" : " looks like a normal multidimensional array, it is actually far more",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "sophisticated.  It actually holds a promise for future computations, see ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/lazy-evaluation",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "and is thus not thread safe.  For example:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let a: MLXArray",
            "let b: MLXArray",
            "",
            "let c = a + b"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "code" : "c",
              "type" : "codeVoice"
            },
            {
              "text" : " is not the result of ",
              "type" : "text"
            },
            {
              "code" : "a + b",
              "type" : "codeVoice"
            },
            {
              "text" : " but rather a graph representing ",
              "type" : "text"
            },
            {
              "code" : "a",
              "type" : "codeVoice"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "code" : "b",
              "type" : "codeVoice"
            },
            {
              "text" : " (which in turn",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "may be large unresolved graphs) and the ",
              "type" : "text"
            },
            {
              "code" : "addition",
              "type" : "codeVoice"
            },
            {
              "text" : " operator that combines them.  It is not safe",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "to create ",
              "type" : "text"
            },
            {
              "code" : "c",
              "type" : "codeVoice"
            },
            {
              "text" : " in one thread and consume\/evaluate it in another.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Memory-Safety",
          "level" : 2,
          "text" : "Memory Safety",
          "type" : "heading"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "code" : "MXArray",
                  "type" : "codeVoice"
                },
                {
                  "text" : " is not memory safe.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "inlineContent" : [
            {
              "text" : "Unlike swift ",
              "type" : "text"
            },
            {
              "code" : "Array",
              "type" : "codeVoice"
            },
            {
              "text" : ", ",
              "type" : "text"
            },
            {
              "code" : "MXArray",
              "type" : "codeVoice"
            },
            {
              "text" : " is not memory safe â€“ use caution when using",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "indexing operators.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "For example:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let a = MLXArray([0])",
            "print(a[10000])"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Will print a random value from outside ",
              "type" : "text"
            },
            {
              "code" : "a",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/Evaluatable",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/ScalarOrArray",
        "doc:\/\/mlx.swift.mlx\/s23CustomStringConvertibleP",
        "doc:\/\/mlx.swift.mlx\/s25ExpressibleByArrayLiteralP",
        "doc:\/\/mlx.swift.mlx\/ST",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/Updatable"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/initialization"
      ],
      "title" : "Creation"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/arithmetic",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/convolution",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/cumulative"
      ],
      "title" : "Arithmetic Operators and Functions"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/indexes",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/indexing",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/sorting"
      ],
      "title" : "Indexing"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/logical"
      ],
      "title" : "Logical Operations"
    },
    {
      "abstract" : [
        {
          "text" : "Some methods allow you to manipulate the shape of the array.  These methods change the size",
          "type" : "text"
        },
        {
          "text" : " ",
          "type" : "text"
        },
        {
          "text" : "and ",
          "type" : "text"
        },
        {
          "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/shape",
          "isActive" : true,
          "type" : "reference"
        },
        {
          "text" : " of the dimensions without changing the number of elements or contents of the array.",
          "type" : "text"
        }
      ],
      "identifiers" : [
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/shapes",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/reduction"
      ],
      "title" : "Shapes"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/conversion"
      ],
      "title" : "Conversion and Data Types"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/-(_:_:)-7frdo",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/-(_:_:)-971j0",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/-(_:_:)-9mf3",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/\/(_:_:)-24oh0",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/\/(_:_:)-6ijef",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/\/(_:_:)-7cmtz"
      ],
      "title" : "Operators"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/count",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/ctx",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/dtype",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/itemSize",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/nbytes",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/ndim",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/size",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/strides"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/copy()",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/eval()",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/item()",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/item(_:)",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/take(_:stream:)",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/update(_:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/CustomStringConvertible-Implementations",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/ExpressibleByArrayLiteral-Implementations",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/ScalarOrArray-Implementations",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/Sequence-Implementations",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/Updatable-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/mlx\/mlxarray"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://mlx.swift.mlx/ST": {
  "identifier" : "doc:\/\/mlx.swift.mlx\/ST",
  "title" : "Swift.Sequence",
  "type" : "unresolvable"
},
"doc://mlx.swift.mlx/documentation/MLX": {
  "abstract" : [
    {
      "text" : "MLX Swift is a Swift API for ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/ml-explore.github.io\/mlx\/build\/html\/index.html",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "MLX",
  "type" : "topic",
  "url" : "\/documentation\/mlx"
},
"doc://mlx.swift.mlx/documentation/MLX/DType": {
  "abstract" : [
    {
      "text" : "Enum wrapping ",
      "type" : "text"
    },
    {
      "code" : "Cmlx.mlx_array_dtype",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DType"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/DType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DType"
    }
  ],
  "role" : "symbol",
  "title" : "DType",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/dtype"
},
"doc://mlx.swift.mlx/documentation/MLX/Evaluatable": {
  "abstract" : [
    {
      "text" : "An object that can be passed to ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/eval(_:)-3b2g9",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " and can produce a list",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "of interior ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " to be evaluated.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Evaluatable"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/Evaluatable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Evaluatable"
    }
  ],
  "role" : "symbol",
  "title" : "Evaluatable",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/evaluatable"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray": {
  "abstract" : [
    {
      "text" : "An N dimensional array.  The main type in ",
      "type" : "text"
    },
    {
      "code" : "mlx",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MLXArray"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MLXArray"
    }
  ],
  "role" : "symbol",
  "title" : "MLXArray",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/-(_:_:)-7frdo": {
  "abstract" : [
    {
      "text" : "Element-wise subtraction.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "-"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/-(_:_:)-7frdo",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "-(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/-(_:_:)-7frdo"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/-(_:_:)-971j0": {
  "abstract" : [
    {
      "text" : "Element-wise subtraction with a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/ScalarOrArray",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " (scalar) argument.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "-"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/-(_:_:)-971j0",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "-(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/-(_:_:)-971j0"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/-(_:_:)-9mf3": {
  "abstract" : [
    {
      "text" : "Element-wise subtraction with a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/ScalarOrArray",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " (scalar) argument.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "-"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/-(_:_:)-9mf3",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "-(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/-(_:_:)-9mf3"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray//(_:_:)-24oh0": {
  "abstract" : [
    {
      "text" : "Element-wise division with a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/ScalarOrArray",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " (scalar) argument.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "\/"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/\/(_:_:)-24oh0",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "\/(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/\/(_:_:)-24oh0"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray//(_:_:)-6ijef": {
  "abstract" : [
    {
      "text" : "Element-wise division.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "\/"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/\/(_:_:)-6ijef",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "\/(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/\/(_:_:)-6ijef"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray//(_:_:)-7cmtz": {
  "abstract" : [
    {
      "text" : "Element-wise division with a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/ScalarOrArray",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " (scalar) argument.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "\/"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/\/(_:_:)-7cmtz",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "\/(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/\/(_:_:)-7cmtz"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/CustomStringConvertible-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/CustomStringConvertible-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "CustomStringConvertible Implementations",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/customstringconvertible-implementations"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/ExpressibleByArrayLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/ExpressibleByArrayLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByArrayLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/expressiblebyarrayliteral-implementations"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/ScalarOrArray-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/ScalarOrArray-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ScalarOrArray Implementations",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/scalarorarray-implementations"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/Sequence-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/Sequence-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Sequence Implementations",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/sequence-implementations"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/Updatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/Updatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Updatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/updatable-implementations"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/copy()": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "copy"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/copy()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "copy()",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/copy()"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/count": {
  "abstract" : [
    {
      "text" : "Number of elements in the 0th dimension.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "count"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/count",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "count",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/count"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/ctx": {
  "abstract" : [
    {
      "text" : "Internal pointer to the mlx-c wrapper on ",
      "type" : "text"
    },
    {
      "code" : "mlx::core::array",
      "type" : "codeVoice"
    },
    {
      "text" : ", used with ",
      "type" : "text"
    },
    {
      "code" : "Cmlx",
      "type" : "codeVoice"
    },
    {
      "text" : " interop.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ctx"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:array.h@T@mlx_array",
      "text" : "mlx_array"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/ctx",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ctx",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/ctx"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/dtype": {
  "abstract" : [
    {
      "text" : "Data type of the elements in the array.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "dtype"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX5DTypeO",
      "text" : "DType"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/dtype",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "dtype",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/dtype"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/eval()": {
  "abstract" : [
    {
      "text" : "Evaluate the array.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "eval"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/eval()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "eval()",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/eval()"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/item()": {
  "abstract" : [
    {
      "text" : "Return the scalar value of the array.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "item"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/item()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "item()",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/item()"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/item(_:)": {
  "abstract" : [
    {
      "text" : "Return the scalar value of the array.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "item"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ".Type) -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/item(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "item(_:)",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/item(_:)"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/itemSize": {
  "abstract" : [
    {
      "text" : "Number of bytes per element",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "itemSize"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/itemSize",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "itemSize",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/itemsize"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/nbytes": {
  "abstract" : [
    {
      "text" : "Number of bytes in the array.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "nbytes"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/nbytes",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "nbytes",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/nbytes"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/ndim": {
  "abstract" : [
    {
      "text" : "Number of dimensions in the array.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ndim"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/ndim",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ndim",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/ndim"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/shape": {
  "abstract" : [
    {
      "text" : "Dimensions of the array.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "shape"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/shape",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "shape",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/shape"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/size": {
  "abstract" : [
    {
      "text" : "Total number of elements in the array",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "size"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/size",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "size",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/size"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/strides": {
  "abstract" : [
    {
      "text" : "Strides of the array.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "strides"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/strides",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "strides",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/strides"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/take(_:stream:)": {
  "abstract" : [
    {
      "text" : "Take elements from flattened 1-D array.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "take"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "stream"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX14StreamOrDeviceV",
      "text" : "StreamOrDevice"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/take(_:stream:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "take(_:stream:)",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/take(_:stream:)"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/update(_:)": {
  "abstract" : [
    {
      "text" : "Replace the contents with a reference to a new array.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "update"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/update(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "update(_:)",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/update(_:)"
},
"doc://mlx.swift.mlx/documentation/MLX/ScalarOrArray": {
  "abstract" : [
    {
      "text" : "Protocol for promoting a value (e.g. a scalar) to an MLXArray.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ScalarOrArray"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/ScalarOrArray",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ScalarOrArray"
    }
  ],
  "role" : "symbol",
  "title" : "ScalarOrArray",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/scalarorarray"
},
"doc://mlx.swift.mlx/documentation/MLX/Updatable": {
  "abstract" : [
    {
      "text" : "An object that can provide a list of the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " in its inner state.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Updatable"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/Updatable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Updatable"
    }
  ],
  "role" : "symbol",
  "title" : "Updatable",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/updatable"
},
"doc://mlx.swift.mlx/documentation/MLX/arithmetic": {
  "abstract" : [
    {
      "text" : "MLX supports a wide range of binary arithmetic operators.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/arithmetic",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Arithmetic",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/arithmetic"
},
"doc://mlx.swift.mlx/documentation/MLX/conversion": {
  "abstract" : [
    {
      "text" : "Conversion functions.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/conversion",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Conversion",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/conversion"
},
"doc://mlx.swift.mlx/documentation/MLX/convolution": {
  "abstract" : [
    {
      "text" : "Convolution operations.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/convolution",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Convolution",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/convolution"
},
"doc://mlx.swift.mlx/documentation/MLX/cumulative": {
  "abstract" : [
    {
      "text" : "Operations that produce a cumulative result.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/cumulative",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Cumulative Operations",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/cumulative"
},
"doc://mlx.swift.mlx/documentation/MLX/eval(_:)-3b2g9": {
  "abstract" : [
    {
      "text" : "Evaluate one or more ",
      "type" : "text"
    },
    {
      "code" : "MLXArray",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "eval"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : "...)"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/eval(_:)-3b2g9",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "eval(_:)",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/eval(_:)-3b2g9"
},
"doc://mlx.swift.mlx/documentation/MLX/indexes": {
  "abstract" : [
    {
      "text" : "Functions to produce and consume array indexes.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/indexes",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Indexes",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/indexes"
},
"doc://mlx.swift.mlx/documentation/MLX/indexing": {
  "abstract" : [
    {
      "text" : "Array subscripts.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/indexing",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Indexing",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/indexing"
},
"doc://mlx.swift.mlx/documentation/MLX/initialization": {
  "abstract" : [
    {
      "text" : "Creating MLXArrays.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/initialization",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Initialization",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/initialization"
},
"doc://mlx.swift.mlx/documentation/MLX/lazy-evaluation": {
  "abstract" : [
    {
      "text" : "Computation in ",
      "type" : "text"
    },
    {
      "code" : "MLX",
      "type" : "codeVoice"
    },
    {
      "text" : " is lazy.  Understand when the graph is evaluated.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/lazy-evaluation",
  "kind" : "article",
  "role" : "article",
  "title" : "Lazy Evaluation",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/lazy-evaluation"
},
"doc://mlx.swift.mlx/documentation/MLX/logical": {
  "abstract" : [
    {
      "text" : "Evaluating logical operations on MLXArray.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/logical",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Logical Operators",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/logical"
},
"doc://mlx.swift.mlx/documentation/MLX/reduction": {
  "abstract" : [
    {
      "text" : "Reduction or aggregation functions.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/reduction",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Reduction Functions",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/reduction"
},
"doc://mlx.swift.mlx/documentation/MLX/shapes": {
  "abstract" : [
    {
      "text" : "Shape is a term to describe the number and size of the dimensions of an N dimension (ND) array.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/shapes",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Shapes",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/shapes"
},
"doc://mlx.swift.mlx/documentation/MLX/sorting": {
  "abstract" : [
    {
      "text" : "Sorting and partitioning values and indices.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/sorting",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Sorting",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/sorting"
},
"doc://mlx.swift.mlx/s23CustomStringConvertibleP": {
  "identifier" : "doc:\/\/mlx.swift.mlx\/s23CustomStringConvertibleP",
  "title" : "Swift.CustomStringConvertible",
  "type" : "unresolvable"
},
"doc://mlx.swift.mlx/s25ExpressibleByArrayLiteralP": {
  "identifier" : "doc:\/\/mlx.swift.mlx\/s25ExpressibleByArrayLiteralP",
  "title" : "Swift.ExpressibleByArrayLiteral",
  "type" : "unresolvable"
},
"https://ml-explore.github.io/mlx/build/html/index.html": {
  "identifier" : "https:\/\/ml-explore.github.io\/mlx\/build\/html\/index.html",
  "title" : "MLX",
  "titleInlineContent" : [
    {
      "text" : "MLX",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/ml-explore.github.io\/mlx\/build\/html\/index.html"
}
}
}