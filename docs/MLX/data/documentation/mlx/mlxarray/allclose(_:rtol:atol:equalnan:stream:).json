{
  "abstract" : [
    {
      "text" : "Approximate comparison of two arrays.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/logical"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/allClose(_:rtol:atol:equalNaN:stream:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "MLX",
    "externalID" : "s:3MLX8MLXArrayC8allClose_4rtol4atol8equalNaN6streamACx_S2dSbAA14StreamOrDeviceVtAA06ScalarK5ArrayRzlF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "allClose"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rtol"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "atol"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "equalNaN"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "stream"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:3MLX14StreamOrDeviceV",
        "text" : "StreamOrDevice"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:3MLX8MLXArrayC",
        "text" : "MLXArray"
      }
    ],
    "modules" : [
      {
        "name" : "MLX"
      }
    ],
    "remoteSource" : {
      "fileName" : "MLXArray+Ops.swift",
      "url" : "https:\/\/github.com\/ml-explore\/mlx-swift\/blob\/main\/Source\/MLX\/MLXArray+Ops.swift#L947"
    },
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "allClose(_:rtol:atol:equalNaN:stream:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "allClose"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "T"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "other"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "T"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "rtol"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sd",
              "text" : "Double"
            },
            {
              "kind" : "text",
              "text" : " = 1e-5, "
            },
            {
              "kind" : "externalParam",
              "text" : "atol"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sd",
              "text" : "Double"
            },
            {
              "kind" : "text",
              "text" : " = 1e-8, "
            },
            {
              "kind" : "externalParam",
              "text" : "equalNaN"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sb",
              "text" : "Bool"
            },
            {
              "kind" : "text",
              "text" : " = false, "
            },
            {
              "kind" : "externalParam",
              "text" : "stream"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/StreamOrDevice",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:3MLX14StreamOrDeviceV",
              "text" : "StreamOrDevice"
            },
            {
              "kind" : "text",
              "text" : " = .default) -> "
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:3MLX8MLXArrayC",
              "text" : "MLXArray"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "T"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/ScalarOrArray",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:3MLX13ScalarOrArrayP",
              "text" : "ScalarOrArray"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "array to compare to",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "other"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "relative tolerance (see discussion)",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "rtol"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "absolute tolerance (see discussion)",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "atol"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "if ",
                  "type" : "text"
                },
                {
                  "code" : "true",
                  "type" : "codeVoice"
                },
                {
                  "text" : " treat NaN values as equal to each other",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "equalNaN"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "stream or device to evaluate on",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "stream"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "The arrays are considered equal if:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "all(abs(a - b) <= (atol + rtol * abs(b)))"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Note: unlike ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/arrayEqual(_:equalNAN:stream:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", this function supports ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/broadcasting",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "For example:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let a = MLXArray(0 ..< 4).sqrt()",
            "let b: MLXArray(0 ..< 4) ** 0.5",
            "",
            "if a.allClose(b).all().item() {",
            "    ...",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "See-Also",
          "level" : 3,
          "text" : "See Also",
          "type" : "heading"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/logical",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/arrayEqual(_:equalNAN:stream:)",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/arrayEqual(_:_:equalNAN:stream:)",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/all(axes:keepDims:stream:)",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/any(axes:keepDims:stream:)",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/arrayEqual(_:equalNAN:stream:)"
      ],
      "title" : "MLXArray Logical Functions"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/mlx\/mlxarray\/allclose(_:rtol:atol:equalnan:stream:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://mlx.swift.mlx/documentation/MLX": {
  "abstract" : [
    {
      "text" : "MLX is a NumPy-like array framework designed for efficient and flexible machine",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "learning research on Apple silicon, brought to you by Apple machine learning research",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "MLX",
  "type" : "topic",
  "url" : "\/documentation\/mlx"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray": {
  "abstract" : [
    {
      "text" : "An N dimensional array.  The main type in ",
      "type" : "text"
    },
    {
      "code" : "mlx",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MLXArray"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MLXArray"
    }
  ],
  "role" : "symbol",
  "title" : "MLXArray",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/all(axes:keepDims:stream:)": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "and",
      "type" : "codeVoice"
    },
    {
      "text" : " reduction over the given axes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "all"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "axes"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "keepDims"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "stream"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX14StreamOrDeviceV",
      "text" : "StreamOrDevice"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/all(axes:keepDims:stream:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "all(axes:keepDims:stream:)",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/all(axes:keepdims:stream:)"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/allClose(_:rtol:atol:equalNaN:stream:)": {
  "abstract" : [
    {
      "text" : "Approximate comparison of two arrays.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "allClose"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "rtol"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "atol"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "equalNaN"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "stream"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX14StreamOrDeviceV",
      "text" : "StreamOrDevice"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/allClose(_:rtol:atol:equalNaN:stream:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "allClose(_:rtol:atol:equalNaN:stream:)",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/allclose(_:rtol:atol:equalnan:stream:)"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/any(axes:keepDims:stream:)": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "or",
      "type" : "codeVoice"
    },
    {
      "text" : " reduction over the given axes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "any"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "axes"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "keepDims"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "stream"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX14StreamOrDeviceV",
      "text" : "StreamOrDevice"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/any(axes:keepDims:stream:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "any(axes:keepDims:stream:)",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/any(axes:keepdims:stream:)"
},
"doc://mlx.swift.mlx/documentation/MLX/MLXArray/arrayEqual(_:equalNAN:stream:)": {
  "abstract" : [
    {
      "text" : "Array equality check.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "arrayEqual"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "equalNAN"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "stream"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX14StreamOrDeviceV",
      "text" : "StreamOrDevice"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/MLXArray\/arrayEqual(_:equalNAN:stream:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "arrayEqual(_:equalNAN:stream:)",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/mlxarray\/arrayequal(_:equalnan:stream:)"
},
"doc://mlx.swift.mlx/documentation/MLX/ScalarOrArray": {
  "abstract" : [
    {
      "text" : "Protocol for promoting a value (e.g. a scalar) to an MLXArray.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ScalarOrArray"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/ScalarOrArray",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ScalarOrArray"
    }
  ],
  "role" : "symbol",
  "title" : "ScalarOrArray",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/scalarorarray"
},
"doc://mlx.swift.mlx/documentation/MLX/StreamOrDevice": {
  "abstract" : [
    {
      "text" : "Parameter type for all MLX operations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "StreamOrDevice"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/StreamOrDevice",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "StreamOrDevice"
    }
  ],
  "role" : "symbol",
  "title" : "StreamOrDevice",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/streamordevice"
},
"doc://mlx.swift.mlx/documentation/MLX/arrayEqual(_:_:equalNAN:stream:)": {
  "abstract" : [
    {
      "text" : "Array equality check.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "arrayEqual"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "equalNAN"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "stream"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX14StreamOrDeviceV",
      "text" : "StreamOrDevice"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/arrayEqual(_:_:equalNAN:stream:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "arrayEqual(_:_:equalNAN:stream:)",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/arrayequal(_:_:equalnan:stream:)"
},
"doc://mlx.swift.mlx/documentation/MLX/broadcasting": {
  "abstract" : [
    {
      "text" : "How different size arrays can be used together.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/broadcasting",
  "kind" : "article",
  "role" : "article",
  "title" : "Numpy Style Broadcasting",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/broadcasting"
},
"doc://mlx.swift.mlx/documentation/MLX/logical": {
  "abstract" : [
    {
      "text" : "Evaluating logical operations on MLXArray.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/logical",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Logical Operators",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/logical"
}
}
}