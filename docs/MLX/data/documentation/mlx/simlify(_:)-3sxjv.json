{
  "abstract" : [
    {
      "text" : "Simplify the graph that computes the arrays.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/simlify(_:)-3sxjv"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:3MLX7simlifyyyypd_tF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "simlify"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "keyword",
        "text" : "Any"
      },
      {
        "kind" : "text",
        "text" : "...)"
      }
    ],
    "modules" : [
      {
        "name" : "MLX"
      }
    ],
    "remoteSource" : {
      "fileName" : "Transforms+Eval.swift",
      "url" : "https:\/\/github.com\/ml-explore\/mlx-swift\/blob\/main\/Source\/MLX\/Transforms+Eval.swift#L104"
    },
    "role" : "symbol",
    "roleHeading" : "Function",
    "symbolKind" : "func",
    "title" : "simlify(_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "simlify"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "values"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "keyword",
              "text" : "Any"
            },
            {
              "kind" : "text",
              "text" : "...)"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Run a few fast graph simplification operations to reuse computation and",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "reduce memory consumption. This function is meant to be run every time",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "so its overhead should be small, approximately 1ms for a graph with a",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "few thousand nodes.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "For example:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "import MLX",
            "",
            "func foo(_ x: MLXArray) -> MLXArray {",
            "    let y = x.matmul(x)",
            "    let z = x.matmul(x)",
            "    return y + z",
            "}",
            "",
            "let x = MLXArray.ones([10, 10])",
            "let y = foo(x)",
            "let z = foo(x)",
            "",
            "\/\/ computes matmul twice",
            "eval(y)",
            "",
            "\/\/ computes matmul once",
            "simplify(z)",
            "eval(z)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/mlx\/simlify(_:)-3sxjv"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://mlx.swift.mlx/documentation/MLX": {
  "abstract" : [
    {
      "text" : "MLX is a NumPy-like array framework designed for efficient and flexible machine",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "learning on Apple silicon, brought to you by Apple machine learning research.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "MLX",
  "type" : "topic",
  "url" : "\/documentation\/mlx"
},
"doc://mlx.swift.mlx/documentation/MLX/simlify(_:)-3sxjv": {
  "abstract" : [
    {
      "text" : "Simplify the graph that computes the arrays.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "simlify"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : "...)"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/simlify(_:)-3sxjv",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "simlify(_:)",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/simlify(_:)-3sxjv"
}
}
}