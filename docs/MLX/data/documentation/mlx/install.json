{
  "abstract" : [
    {
      "text" : "How to install and use.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/install"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "MLX"
      }
    ],
    "role" : "article",
    "roleHeading" : "Article",
    "title" : "Installation"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " is meant to be built and run from Xcode or SwiftPM.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Xcode",
          "level" : 2,
          "text" : "Xcode",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "In Xcode you can add ",
              "type" : "text"
            },
            {
              "code" : "https:\/\/github.com\/ml-explore\/mlx-swift",
              "type" : "codeVoice"
            },
            {
              "text" : " as a package",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "dependency and link ",
              "type" : "text"
            },
            {
              "code" : "MLX",
              "type" : "codeVoice"
            },
            {
              "text" : ", ",
              "type" : "text"
            },
            {
              "code" : "MLXNN",
              "type" : "codeVoice"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "code" : "MLXRandom",
              "type" : "codeVoice"
            },
            {
              "text" : " as needed.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "SwiftPM",
          "level" : 2,
          "text" : "SwiftPM",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To use ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " with SwiftPm you can add this to your ",
              "type" : "text"
            },
            {
              "code" : "Package.swift",
              "type" : "codeVoice"
            },
            {
              "text" : ":",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "dependencies: [",
            "    .package(url: \"https:\/\/github.com\/ml-explore\/mlx-swift\", from: \"0.10.0\")",
            "]"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "and add the libraries (as needed) as dependencies:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "dependencies: [.product(name: \"MLX\", package: \"mlx-swift\"),",
            "               .product(name: \"MLXRandom\", package: \"mlx-swift\"),",
            "               .product(name: \"MLXNN\", package: \"mlx-swift\"),",
            "               .product(name: \"MLXOptimziers\", package: \"mlx-swift\"),",
            "               .product(name: \"MLXFFT\", package: \"mlx-swift\")]"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Note that SwiftPM cannot build the metal shaders so the ultimate build has to be done via",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "Xcode or ",
                  "type" : "text"
                },
                {
                  "code" : "xcodebuild",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "anchor" : "Command-Line-Tools",
          "level" : 2,
          "text" : "Command Line Tools",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "See ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/troubleshooting",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " (Runnging From Command Line) for information about running command line tools from the shell.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/troubleshooting",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/examples",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/converting-python",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/broadcasting",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/lazy-evaluation",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/unified-memory",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/compilation",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/using-streams"
      ],
      "title" : "MLX"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/mlx\/install"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://mlx.swift.mlx/documentation/MLX": {
  "abstract" : [
    {
      "text" : "MLX Swift is a Swift API for ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/ml-explore.github.io\/mlx\/build\/html\/index.html",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "MLX",
  "type" : "topic",
  "url" : "\/documentation\/mlx"
},
"doc://mlx.swift.mlx/documentation/MLX/broadcasting": {
  "abstract" : [
    {
      "text" : "How different size arrays can be used together.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/broadcasting",
  "kind" : "article",
  "role" : "article",
  "title" : "Numpy Style Broadcasting",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/broadcasting"
},
"doc://mlx.swift.mlx/documentation/MLX/compilation": {
  "abstract" : [
    {
      "text" : "MLX has a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/compile(inputs:outputs:_:)-96gqs",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " function transformation which compiles computation",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "graphs. Function compilation results in smaller graphs by merging common work",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and fusing certain operations. In many cases this can lead to big improvements",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "in run-time and memory use.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/compilation",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Compilation",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/compilation"
},
"doc://mlx.swift.mlx/documentation/MLX/compile(inputs:outputs:_:)-96gqs": {
  "abstract" : [
    {
      "text" : "Returns a compiled function that produces the same output as ",
      "type" : "text"
    },
    {
      "code" : "f()",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "compile"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "inputs"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX9UpdatableP",
      "text" : "Updatable"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "outputs"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX9UpdatableP",
      "text" : "Updatable"
    },
    {
      "kind" : "text",
      "text" : "], (["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : "]) -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : "]) -> (["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : "]) -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:3MLX8MLXArrayC",
      "text" : "MLXArray"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/compile(inputs:outputs:_:)-96gqs",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "compile(inputs:outputs:_:)",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/compile(inputs:outputs:_:)-96gqs"
},
"doc://mlx.swift.mlx/documentation/MLX/converting-python": {
  "abstract" : [
    {
      "text" : "Common patterns from python and mapping ",
      "type" : "text"
    },
    {
      "code" : "mlx",
      "type" : "codeVoice"
    },
    {
      "text" : " function names.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/converting-python",
  "kind" : "article",
  "role" : "article",
  "title" : "Converting From Python",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/converting-python"
},
"doc://mlx.swift.mlx/documentation/MLX/examples": {
  "abstract" : [
    {
      "text" : "Swift example code for MLX and MLXNN.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/examples",
  "kind" : "article",
  "role" : "sampleCode",
  "title" : "MLX Swift Examples",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/examples"
},
"doc://mlx.swift.mlx/documentation/MLX/lazy-evaluation": {
  "abstract" : [
    {
      "text" : "Computation in ",
      "type" : "text"
    },
    {
      "code" : "MLX",
      "type" : "codeVoice"
    },
    {
      "text" : " is lazy.  Understand when the graph is evaluated.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/lazy-evaluation",
  "kind" : "article",
  "role" : "article",
  "title" : "Lazy Evaluation",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/lazy-evaluation"
},
"doc://mlx.swift.mlx/documentation/MLX/troubleshooting": {
  "abstract" : [
    {
      "text" : "Help with problems you might run into.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/troubleshooting",
  "kind" : "article",
  "role" : "article",
  "title" : "Troubleshooting",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/troubleshooting"
},
"doc://mlx.swift.mlx/documentation/MLX/unified-memory": {
  "abstract" : [
    {
      "code" : "MLX",
      "type" : "codeVoice"
    },
    {
      "text" : " takes advantage of the shared memory between the CPU and GPU.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/unified-memory",
  "kind" : "article",
  "role" : "article",
  "title" : "Unified Memory",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/unified-memory"
},
"doc://mlx.swift.mlx/documentation/MLX/using-streams": {
  "abstract" : [
    {
      "text" : "Controlling where your computations are evaluated.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/using-streams",
  "kind" : "article",
  "role" : "article",
  "title" : "Using Streams",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/using-streams"
},
"https://ml-explore.github.io/mlx/build/html/index.html": {
  "identifier" : "https:\/\/ml-explore.github.io\/mlx\/build\/html\/index.html",
  "title" : "MLX",
  "titleInlineContent" : [
    {
      "text" : "MLX",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/ml-explore.github.io\/mlx\/build\/html\/index.html"
}
}
}