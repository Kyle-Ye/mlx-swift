{
  "abstract" : [
    {
      "text" : "How to install and use.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/install"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "MLX"
      }
    ],
    "role" : "article",
    "roleHeading" : "Article",
    "title" : "Installation"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " is meant to be built and run from Xcode or SwiftPM.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Xcode",
          "level" : 2,
          "text" : "Xcode",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "In Xcode you can add ",
              "type" : "text"
            },
            {
              "code" : "https:\/\/github.com\/ml-explore\/mlx-swift",
              "type" : "codeVoice"
            },
            {
              "text" : " as a package",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "dependency and link ",
              "type" : "text"
            },
            {
              "code" : "MLX",
              "type" : "codeVoice"
            },
            {
              "text" : ", ",
              "type" : "text"
            },
            {
              "code" : "MLXNN",
              "type" : "codeVoice"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "code" : "MLXRandom",
              "type" : "codeVoice"
            },
            {
              "text" : " as needed.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "SwiftPM",
          "level" : 2,
          "text" : "SwiftPM",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To use ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " with swiftpm you can add this to your ",
              "type" : "text"
            },
            {
              "code" : "Package.swift",
              "type" : "codeVoice"
            },
            {
              "text" : ":",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "dependencies: [",
            "    .package(url: \"https:\/\/github.com\/ml-explore\/mlx-swift\", from: \"0.10.0\")",
            "]"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "and add the libraries as dependencies:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "dependencies: [.product(name: \"MLX\", package: \"mlx-swift\"),",
            "               .product(name: \"MLXRandom\", package: \"mlx-swift\"),",
            "               .product(name: \"MLXNN\", package: \"mlx-swift\")]"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Note that SwiftPM cannot build the metal shaders so the ultimate build has to be done via",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "Xcode or ",
                  "type" : "text"
                },
                {
                  "code" : "xcodebuild",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "anchor" : "Command-Line-Tools",
          "level" : 2,
          "text" : "Command Line Tools",
          "type" : "heading"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "MLX requires metal shaders from the ",
                  "type" : "text"
                },
                {
                  "code" : "Cmlx",
                  "type" : "codeVoice"
                },
                {
                  "text" : " framework – these not not usable",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "from command line tools unless ",
                  "type" : "text"
                },
                {
                  "code" : "DYLD_FRAMEWORK_PATH",
                  "type" : "codeVoice"
                },
                {
                  "text" : " makes them visible.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "inlineContent" : [
            {
              "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " is built on top of the ",
              "type" : "text"
            },
            {
              "code" : "mlx",
              "type" : "codeVoice"
            },
            {
              "text" : " C++ library packaged in the ",
              "type" : "text"
            },
            {
              "code" : "Cmlx",
              "type" : "codeVoice"
            },
            {
              "text" : " swift package.  ",
              "type" : "text"
            },
            {
              "code" : "Cmlx",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "produces a bundle called ",
              "type" : "text"
            },
            {
              "code" : "mlx-swift_Cmlx.bundle",
              "type" : "codeVoice"
            },
            {
              "text" : " which contains the compiled metal shaders.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "If you build a command line tool and run it from Xcode, the ",
              "type" : "text"
            },
            {
              "code" : "DYLD_FRAMEWORK_PATH",
              "type" : "codeVoice"
            },
            {
              "text" : " is set",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "so that this bundle is found.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you want to run the same command from the shell you must manually set the ",
              "type" : "text"
            },
            {
              "code" : "DYLD_FRAMEWORK_PATH",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "to the build directory.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Applications",
          "level" : 2,
          "text" : "Applications",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Applications should be configured to copy ",
              "type" : "text"
            },
            {
              "code" : "mlx-swift_Cmlx.bundle",
              "type" : "codeVoice"
            },
            {
              "text" : " – this will happen automatically",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "if you link the ",
              "type" : "text"
            },
            {
              "code" : "MLX",
              "type" : "codeVoice"
            },
            {
              "text" : " library.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/examples",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/broadcasting",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/converting-python",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/lazy-evaluation",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/unified-memory",
        "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/using-streams"
      ],
      "title" : "MLX"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/mlx\/install"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://mlx.swift.mlx/documentation/MLX": {
  "abstract" : [
    {
      "text" : "MLX is a NumPy-like array framework designed for efficient and flexible machine",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "learning on Apple silicon, brought to you by Apple machine learning research.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "MLX",
  "type" : "topic",
  "url" : "\/documentation\/mlx"
},
"doc://mlx.swift.mlx/documentation/MLX/broadcasting": {
  "abstract" : [
    {
      "text" : "How different size arrays can be used together.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/broadcasting",
  "kind" : "article",
  "role" : "article",
  "title" : "Numpy Style Broadcasting",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/broadcasting"
},
"doc://mlx.swift.mlx/documentation/MLX/converting-python": {
  "abstract" : [
    {
      "text" : "Common patterns from python and mapping ",
      "type" : "text"
    },
    {
      "code" : "mlx",
      "type" : "codeVoice"
    },
    {
      "text" : " function names.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/converting-python",
  "kind" : "article",
  "role" : "article",
  "title" : "Converting From Python",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/converting-python"
},
"doc://mlx.swift.mlx/documentation/MLX/examples": {
  "abstract" : [
    {
      "text" : "Swift example code for MLX and MLXNN.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/examples",
  "kind" : "article",
  "role" : "sampleCode",
  "title" : "MLX Swift Examples",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/examples"
},
"doc://mlx.swift.mlx/documentation/MLX/lazy-evaluation": {
  "abstract" : [
    {
      "text" : "Computation in ",
      "type" : "text"
    },
    {
      "code" : "MLX",
      "type" : "codeVoice"
    },
    {
      "text" : " is lazy.  Understand when the graph is evaluated.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/lazy-evaluation",
  "kind" : "article",
  "role" : "article",
  "title" : "Lazy Evaluation",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/lazy-evaluation"
},
"doc://mlx.swift.mlx/documentation/MLX/unified-memory": {
  "abstract" : [
    {
      "code" : "MLX",
      "type" : "codeVoice"
    },
    {
      "text" : " takes advantage of the shared memory between the CPU and GPU.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/unified-memory",
  "kind" : "article",
  "role" : "article",
  "title" : "Unified Memory",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/unified-memory"
},
"doc://mlx.swift.mlx/documentation/MLX/using-streams": {
  "abstract" : [
    {
      "text" : "Controlling where your computations are evaluated.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/mlx.swift.mlx\/documentation\/MLX\/using-streams",
  "kind" : "article",
  "role" : "article",
  "title" : "Using Streams",
  "type" : "topic",
  "url" : "\/documentation\/mlx\/using-streams"
}
}
}